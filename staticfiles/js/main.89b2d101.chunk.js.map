{"version":3,"sources":["constants/productConstants.js","constants/cartConstants.js","constants/userConstants.js","constants/OrderConstants.js","Store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/orderReducers.js","actions/UserActions.js","components/SearchBox.js","components/Header.js","components/Footer.js","components/Message.js","components/Paginate.js","components/Loader.js","components/Rating.js","components/Product.js","actions/productActions.js","components/ProductCarousel.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/CartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/OrderActions.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListSCreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/OrderListScreen.js","App.js","reportWebVitals.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAIL","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","CART_CLEAR_ITEMS","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATES_REQUEST","USER_UPDATES_SUCCESS","USER_UPDATES_FAIL","USER_UPDATES_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_CREATE_RESET","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","reducer","combineReducers","productList","state","products","action","type","loading","payload","page","pages","error","productDetails","product","reviews","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","success","userList","users","userUpdate","orderCreate","order","orderDetails","orderItems","orderPay","orderListMy","orders","userDelete","productDelete","productCreate","productUpdate","orderList","orderDeliver","productReviewCreate","productTopRated","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","getUserDetails","id","dispatch","getState","a","config","headers","Authorization","token","axios","get","data","response","detail","message","SearchBox","useState","keyword","setKeyword","history","useHistory","Form","onSubmit","e","preventDefault","push","location","pathname","inline","Control","name","onChange","target","value","className","Button","variant","Header","useSelector","useDispatch","Navbar","bg","expand","collapseOnSelect","Container","to","Brand","Toggle","Collapse","Nav","Link","NavDropdown","title","Item","onClick","removeItem","isAdmin","Footer","Row","Col","Message","children","Alert","Paginate","split","Pagination","Array","keys","active","Loader","Spinner","animation","role","style","height","width","margin","display","Rating","text","color","Product","Card","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","listProducts","listProductDetails","ProductCarousel","useEffect","Carousel","pause","Image","alt","fluid","Caption","HomeScreen","search","sm","md","lg","xl","ProductScreen","match","qty","setQty","setRating","comment","setComment","loadingProductReview","errorProductReview","successProductReview","params","ListGroup","ListGroupItem","description","countInStock","xs","disabled","length","review","createdAt","productId","post","Group","controlId","Label","row","addToCart","setItem","stringify","CartScreen","Number","removeFromCartHandler","removeFromCart","rounded","reduce","acc","toFixed","FormContainer","LoginScreen","email","setEmail","password","setPassword","redirect","login","FormGroup","placeholder","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","required","ProfileScreen","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","responsive","substring","totalPrice","isPaid","paidAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","itemsPrice","shippingPrice","taxPrice","index","createOrder","OrderScreen","orderId","sdkReady","setSdkReady","loadingPay","successPay","loadingDeliver","successDeliver","window","paypal","script","document","createElement","async","onload","body","appendChild","addPayPalScript","href","isDelivered","amount","onSuccess","paymentResult","payOrder","deliverOrder","UserListSCreen","successDelete","deleteHandler","confirm","delete","deleteUser","bordered","hover","EditUserScreen","userId","setIsAdmin","errorUpdate","loadingUpdate","successUpdate","updateUser","lable","ProductListScreen","loadingDelete","errorDelete","loadingCreate","successCreate","errorCreate","createdProduct","deleteProduct","category","brand","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","uploadFileHandler","file","files","formData","FormData","append","updateProduct","File","custom","OrderListSCreen","deliveredAt","App","path","component","exact","UserEditScreen","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.89b2d101.chunk.js","sourcesContent":["export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\r\n\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\r\n\r\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\r\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\r\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\r\n\r\n\r\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\r\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\r\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\r\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\r\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\r\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\r\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\r\n\r\n\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\r\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\r\n\r\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST'\r\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS'\r\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL'\r\n\r\n\r\n\r\n\r\n","export  const CART_ADD_ITEM = 'CART_ADD_ITEM'\r\nexport  const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\r\nexport  const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\r\nexport  const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'\r\nexport  const CART_CLEAR_ITEMS = 'CART_CLEAR_ITEMS'\r\n\r\n","export const  USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const  USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const  USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\n\r\n\r\nexport const  USER_LOGOUT= 'USER_LOGOUT'\r\n\r\nexport const  USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\r\nexport const  USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\r\nexport const  USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\r\n\r\n\r\nexport const  USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\r\nexport const  USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\r\nexport const  USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\r\nexport const  USER_DETAILS_RESET = 'USER_DETAILS_RESET'\r\n\r\n\r\nexport const  USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\r\nexport const  USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\r\nexport const  USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\r\nexport const  USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\r\n\r\nexport const  USER_LIST_REQUEST = 'USER_LIST_REQUEST'\r\nexport const  USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\r\nexport const  USER_LIST_FAIL = 'USER_LIST_FAIL'\r\nexport const  USER_LIST_RESET = 'USER_LIST_RESET'\r\n\r\nexport const  USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\r\nexport const  USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\r\nexport const  USER_DELETE_FAIL = 'USER_DELETE_FAIL'\r\n\r\nexport const  USER_UPDATES_REQUEST = 'USER_UPDATES_REQUEST'\r\nexport const  USER_UPDATES_SUCCESS = 'USER_UPDATES_SUCCESS'\r\nexport const  USER_UPDATES_FAIL = 'USER_UPDATES_FAIL'\r\nexport const  USER_UPDATES_RESET = 'USER_UPDATES_RESET'\r\n\r\n\r\n\r\n\r\n","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\r\nexport const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET'\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\r\n\r\n\r\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\r\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\r\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\r\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\r\n\r\n\r\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\r\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\r\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\r\n\r\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\r\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\r\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\r\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'\r\n","import {createStore,combineReducers,applyMiddleware} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport {productDetailsReducer} from \"./reducers/productReducers\";\r\nimport {productListReducer} from \"./reducers/productReducers\";\r\nimport {cartReducer} from \"./reducers/cartReducers\";\r\nimport {userLoginReducer} from \"./reducers/userReducers\";\r\n\r\nimport {composeWithDevTools} from \"redux-devtools-extension\";\r\nimport {userRegisterReducer} from \"./reducers/userReducers\";\r\nimport {userDetailsReducer} from \"./reducers/userReducers\";\r\nimport {userUpdateProfileReducer} from \"./reducers/userReducers\";\r\nimport {orderCreateReducer} from \"./reducers/orderReducers\";\r\nimport {orderDetailsReducer} from \"./reducers/orderReducers\";\r\nimport {orderPayReducer} from \"./reducers/orderReducers\";\r\nimport {orderListMyReducer} from \"./reducers/orderReducers\";\r\nimport {userListReducer} from \"./reducers/userReducers\";\r\nimport {userDeleteReducer} from \"./reducers/userReducers\";\r\nimport {userUpdateReducer} from \"./reducers/userReducers\";\r\nimport {productDeleteReducer} from \"./reducers/productReducers\";\r\nimport {productCreateReducer} from \"./reducers/productReducers\";\r\nimport {productUpdateReducer} from \"./reducers/productReducers\";\r\nimport {orderListReducer} from \"./reducers/orderReducers\";\r\nimport {orderDeliverReducer} from \"./reducers/orderReducers\";\r\nimport {productReviewCreateReducer} from \"./reducers/productReducers\";\r\nimport {productTopRatedReducer} from \"./reducers/productReducers\";\r\n\r\nconst reducer = combineReducers({\r\n    productList:productListReducer,\r\n    productDetails: productDetailsReducer,\r\n    cart:cartReducer,\r\n    userLogin:userLoginReducer,\r\n    userRegister:userRegisterReducer,\r\n    userDetails : userDetailsReducer,\r\n    userUpdateProfile:userUpdateProfileReducer,\r\n    userList:userListReducer,\r\n    userUpdate:userUpdateReducer,\r\n    orderCreate:orderCreateReducer,\r\n    orderDetails:orderDetailsReducer,\r\n    orderPay:orderPayReducer,\r\n    orderListMy:orderListMyReducer,\r\n    userDelete:userDeleteReducer,\r\n    productDelete:productDeleteReducer,\r\n    productCreate:productCreateReducer,\r\n    productUpdate:productUpdateReducer,\r\n    orderList:orderListReducer,\r\n    orderDeliver:orderDeliverReducer,\r\n    productReviewCreate:productReviewCreateReducer,\r\n    productTopRated:productTopRatedReducer,\r\n\r\n})\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ?\r\n    JSON.parse(localStorage.getItem('cartItems')) : []\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') ?\r\n    JSON.parse(localStorage.getItem('userInfo')) : null\r\n\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ?\r\n    JSON.parse(localStorage.getItem('shippingAddress')) : {}\r\n\r\n\r\n\r\nconst initialState = {\r\n    cart: {\r\n        cartItems:cartItemsFromStorage,\r\n        shippingAddress: shippingAddressFromStorage,\r\n    },\r\n    userLogin :{userInfo:userInfoFromStorage},\r\n\r\n}\r\n\r\n\r\nconst  middleware = [thunk]\r\nconst store = createStore(reducer, initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\nexport default store\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","//a reducer is simply a function that takes a function of current state and manipulates the stae and update te stae\r\nimport {PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_FAIL,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_FAIL,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_FAIL,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,PRODUCT_CREATE_REQUEST,PRODUCT_CREATE_RESET,\r\n    PRODUCT_UPDATE_RESET,PRODUCT_UPDATE_SUCCESS,PRODUCT_UPDATE_FAIL,PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,PRODUCT_CREATE_REVIEW_RESET,PRODUCT_CREATE_REVIEW_FAIL,PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,PRODUCT_TOP_REQUEST,PRODUCT_TOP_FAIL,\r\n\r\n} from \"../constants/productConstants\";\r\n\r\nexport const productListReducer = (state ={products: []}, action) =>{\r\n    switch (action.type){\r\n        case PRODUCT_LIST_REQUEST:\r\n            return {loading:true, products: []}\r\n        case PRODUCT_LIST_SUCCESS:\r\n            return {loading:false,\r\n                products: action.payload.products,\r\n                page:action.payload.page,\r\n                pages:action.payload.pages,\r\n            }\r\n        case PRODUCT_LIST_FAIL:\r\n            return {loading:false, error: action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport const productDetailsReducer = (state ={product:{reviews: []} }, action) =>{\r\n    switch (action.type){\r\n        case PRODUCT_DETAILS_REQUEST:\r\n            return {loading:true, ...state}\r\n        case PRODUCT_DETAILS_SUCCESS:\r\n            return {loading:false,\r\n                product: action.payload}\r\n        case PRODUCT_DETAILS_FAIL:\r\n            return {loading:false, error: action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productDeleteReducer = (state ={ } , action) =>{\r\n    switch (action.type){\r\n        case PRODUCT_DELETE_REQUEST:\r\n            return {loading:true}\r\n        case PRODUCT_DELETE_SUCCESS:\r\n            return {loading:false,success: true\r\n           }\r\n        case PRODUCT_DELETE_FAIL:\r\n            return {loading:false, error: action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productCreateReducer = (state ={ } , action) =>{\r\n    switch (action.type){\r\n        case PRODUCT_CREATE_REQUEST:\r\n            return {loading:true}\r\n        case PRODUCT_CREATE_SUCCESS:\r\n            return {loading:false,success: true,product: action.payload\r\n           }\r\n        case PRODUCT_CREATE_FAIL:\r\n            return {loading:false, error: action.payload}\r\n         case PRODUCT_CREATE_RESET:\r\n            return {\r\n\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport const productUpdateReducer = (state ={product:{} } , action) =>{\r\n    switch (action.type){\r\n        case PRODUCT_UPDATE_REQUEST:\r\n            return {loading:true}\r\n        case PRODUCT_UPDATE_SUCCESS:\r\n            return {loading:false,success: true,product: action.payload\r\n           }\r\n        case PRODUCT_UPDATE_FAIL:\r\n            return {loading:false, error: action.payload}\r\n         case PRODUCT_UPDATE_RESET:\r\n            return {\r\n                product: {}\r\n\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport const productReviewCreateReducer = (state ={ } , action) =>{\r\n    switch (action.type){\r\n        case PRODUCT_CREATE_REVIEW_REQUEST:\r\n            return {loading:true}\r\n        case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n            return {loading:false,success: true,\r\n           }\r\n        case PRODUCT_CREATE_REVIEW_FAIL:\r\n            return {loading:false, error: action.payload}\r\n         case PRODUCT_CREATE_REVIEW_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport const productTopRatedReducer = (state ={products: [] } , action) =>{\r\n    switch (action.type){\r\n        case PRODUCT_TOP_REQUEST:\r\n            return {loading:true, products: []}\r\n        case PRODUCT_TOP_SUCCESS:\r\n            return {loading:false,products: action.payload,\r\n           }\r\n        case PRODUCT_TOP_FAIL:\r\n            return {loading:false, error: action.payload}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import {CART_ADD_ITEM} from \"../constants/cartConstants\";\r\nimport {CART_REMOVE_ITEM} from \"../constants/cartConstants\";\r\nimport {CART_SAVE_SHIPPING_ADDRESS} from \"../constants/cartConstants\";\r\nimport {CART_SAVE_PAYMENT_METHOD} from \"../constants/cartConstants\";\r\nimport {CART_CLEAR_ITEMS} from \"../constants/cartConstants\";\r\n\r\n\r\nexport const cartReducer = (state={cartItems:[], shippingAddress:{}}, action) => {\r\n    switch (action.type){\r\n        case CART_ADD_ITEM:\r\n            const item = action.payload\r\n            const existItem = state.cartItems.find(x => x.product === item.product)\r\n            if(existItem){\r\n                return {\r\n                    ...state,\r\n                    cartItems: state.cartItems.map(x =>\r\n                        x.product === existItem.product ? item : x\r\n                    )\r\n                }\r\n\r\n            }else{\r\n                return {\r\n                    ...state,\r\n                    cartItems: [...state.cartItems, item]\r\n                }\r\n            }\r\n        case CART_REMOVE_ITEM:\r\n            return {\r\n                ...state,\r\n                cartItems: state.cartItems.filter(x => x.product !== action.payload)\r\n            }\r\n        case CART_SAVE_SHIPPING_ADDRESS:\r\n            return {\r\n                ...state,\r\n                shippingAddress: action.payload\r\n            }\r\n        case CART_SAVE_PAYMENT_METHOD:\r\n        return {\r\n            ...state,\r\n            paymentMethod: action.payload\r\n        }\r\n        case CART_CLEAR_ITEMS:\r\n            return {\r\n                ...state,\r\n                cartItems: []\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import {USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n    USER_LOGOUT,\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_FAIL,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_RESET,\r\n    USER_DETAILS_RESET,\r\n    USER_LIST_RESET,\r\n    USER_LIST_SUCCESS,USER_LIST_REQUEST,\r\n    USER_LIST_FAIL,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n    USER_DELETE_REQUEST,\r\n    USER_UPDATES_RESET,\r\n    USER_UPDATES_SUCCESS,\r\n    USER_UPDATES_FAIL,\r\n    USER_UPDATES_REQUEST\r\n} from '../constants/userConstants'\r\n\r\nexport const userLoginReducer = (state ={}, action) =>{\r\n    switch (action.type){\r\n        case USER_LOGIN_REQUEST:\r\n            return {loading:true}\r\n        case USER_LOGIN_SUCCESS:\r\n            return {loading:false, userInfo: action.payload}\r\n        case USER_LOGIN_FAIL:\r\n            return {loading:false, error: action.payload}\r\n        case USER_LOGOUT:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport const userRegisterReducer = (state ={}, action) =>{\r\n    switch (action.type){\r\n        case USER_REGISTER_REQUEST:\r\n            return {loading:true}\r\n        case USER_REGISTER_SUCCESS:\r\n            return {loading:false, userInfo: action.payload}\r\n        case USER_REGISTER_FAIL:\r\n            return {loading:false, error: action.payload}\r\n        case USER_LOGOUT:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userDetailsReducer = (state ={ user :{}}, action) =>{\r\n    switch (action.type){\r\n        case USER_DETAILS_REQUEST:\r\n            return {...state, loading:true}\r\n        case USER_DETAILS_SUCCESS:\r\n            return {loading:false, user: action.payload}\r\n        case USER_DETAILS_FAIL:\r\n            return {loading:false, error: action.payload}\r\n        case USER_DETAILS_RESET:\r\n            return {user:{}}\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport const userUpdateProfileReducer = (state ={ }, action) =>{\r\n    switch (action.type){\r\n        case USER_UPDATE_PROFILE_REQUEST:\r\n            return { loading:true}\r\n        case USER_UPDATE_PROFILE_SUCCESS:\r\n            return {loading:false, success:true, userInfo: action.payload}\r\n        case USER_UPDATE_PROFILE_FAIL:\r\n            return {loading:false, error: action.payload}\r\n        case USER_UPDATE_PROFILE_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userListReducer = (state ={users:[] }, action) =>{\r\n    switch (action.type){\r\n        case USER_LIST_REQUEST:\r\n            return { loading:true}\r\n        case USER_LIST_SUCCESS:\r\n            return {loading:false, users: action.payload}\r\n        case USER_LIST_FAIL:\r\n            return {loading:false, error: action.payload}\r\n        case USER_LIST_RESET:\r\n            return {users: []}\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport const userDeleteReducer = (state ={ }, action) =>{\r\n    switch (action.type){\r\n        case USER_DELETE_REQUEST:\r\n            return { loading:true}\r\n        case USER_DELETE_SUCCESS:\r\n            return {loading:false, success:true}\r\n        case USER_DELETE_FAIL:\r\n            return {loading:false, error: action.payload}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport const userUpdateReducer = (state ={user:{} }, action) =>{\r\n    switch (action.type){\r\n        case USER_UPDATES_REQUEST:\r\n            return { loading:true}\r\n        case USER_UPDATES_SUCCESS:\r\n            return {loading:false, success:true}\r\n        case USER_UPDATES_FAIL:\r\n            return {loading:false, error: action.payload}\r\n        case USER_UPDATES_RESET:\r\n            return {user: {}}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import {ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_FAIL,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_RESET,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_RESET,\r\n    ORDER_LIST_MY_RESET,ORDER_LIST_MY_SUCCESS,ORDER_LIST_MY_FAIL,ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_SUCCESS,ORDER_LIST_REQUEST,ORDER_LIST_FAIL,\r\n    ORDER_DELIVER_RESET,ORDER_DELIVER_SUCCESS,ORDER_DELIVER_FAIL,ORDER_DELIVER_REQUEST,\r\n}\r\n    from \"../constants/OrderConstants\";\r\n\r\nexport const  orderCreateReducer = (state={},action) =>{\r\n    switch (action.type){\r\n        case ORDER_CREATE_REQUEST:\r\n            return{\r\n                loading:true\r\n            }\r\n        case ORDER_CREATE_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success:true,\r\n                order:action.payload\r\n            }\r\n        case ORDER_CREATE_FAIL:\r\n            return {\r\n                loading: false,\r\n                error:action.payload,\r\n            }\r\n        case ORDER_CREATE_RESET:\r\n            return {\r\n\r\n            }\r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\nexport const  orderDetailsReducer = (state={loading:true, orderItems:[], shippingAddress:{}},action) =>{\r\n    switch (action.type){\r\n        case ORDER_DETAILS_REQUEST:\r\n            return{\r\n                ...state,\r\n                loading:true\r\n            }\r\n        case ORDER_DETAILS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success:true,\r\n                order:action.payload\r\n            }\r\n        case ORDER_DETAILS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error:action.payload,\r\n            }\r\n\r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\n\r\nexport const  orderPayReducer = (state={},action) =>{\r\n    switch (action.type){\r\n        case ORDER_PAY_REQUEST:\r\n            return{\r\n                loading:true\r\n            }\r\n        case ORDER_PAY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success:true,\r\n            }\r\n        case ORDER_PAY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error:action.payload,\r\n            }\r\n        case ORDER_PAY_RESET:\r\n            return {\r\n            }\r\n\r\n\r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\n\r\nexport const  orderDeliverReducer = (state={},action) =>{\r\n    switch (action.type){\r\n        case ORDER_DELIVER_REQUEST:\r\n            return{\r\n                loading:true\r\n            }\r\n        case ORDER_DELIVER_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success:true,\r\n            }\r\n        case ORDER_DELIVER_FAIL:\r\n            return {\r\n                loading: false,\r\n                error:action.payload,\r\n            }\r\n        case ORDER_DELIVER_RESET:\r\n            return {\r\n            }\r\n\r\n\r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\n\r\nexport const  orderListMyReducer = (state={orders:[]},action) =>{\r\n    switch (action.type){\r\n        case ORDER_LIST_MY_REQUEST:\r\n            return{\r\n                loading:true\r\n            }\r\n        case ORDER_LIST_MY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders:action.payload,\r\n            }\r\n        case ORDER_LIST_MY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error:action.payload,\r\n            }\r\n        case ORDER_LIST_MY_RESET:\r\n            return {\r\n                orders: []\r\n            }\r\n\r\n\r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\n\r\nexport const  orderListReducer = (state={orders:[]},action) =>{\r\n    switch (action.type){\r\n        case ORDER_LIST_REQUEST:\r\n            return{\r\n                loading:true\r\n            }\r\n        case ORDER_LIST_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders:action.payload,\r\n            }\r\n        case ORDER_LIST_FAIL:\r\n            return {\r\n                loading: false,\r\n                error:action.payload,\r\n            }\r\n\r\n        default:\r\n            return state\r\n\r\n    }\r\n}","import axios from \"axios\";\r\nimport {USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n    USER_LOGOUT,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n    USER_REGISTER_REQUEST,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_DETAILS_RESET,\r\n    USER_UPDATE_PROFILE_RESET,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_LIST_RESET,\r\n    USER_LIST_SUCCESS,USER_LIST_REQUEST,\r\n    USER_LIST_FAIL,\r\n\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n    USER_DELETE_REQUEST,\r\n\r\n    USER_UPDATES_SUCCESS,\r\n    USER_UPDATES_FAIL,\r\n    USER_UPDATES_REQUEST\r\n} from '../constants/userConstants'\r\nimport {ORDER_LIST_MY_RESET} from \"../constants/OrderConstants\";\r\n\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type:USER_LOGIN_REQUEST\r\n        })\r\n        const config = {\r\n            headers:{\r\n                'Content-type':'application/json'\r\n            }\r\n        }\r\n        const {data} = await axios.post(\r\n            '/api/users/login/',\r\n            { 'username':email, 'password':password },\r\n            config\r\n        )\r\n        dispatch({\r\n            type:USER_LOGIN_SUCCESS,\r\n            payload:data\r\n        })\r\n        localStorage.setItem('userInfo',JSON.stringify(data))\r\n\r\n    }catch (error){\r\n        dispatch({\r\n            type:USER_LOGIN_FAIL,\r\n            payload:error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n                :error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const logout = ()=>(dispatch) => {\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({type:USER_LOGOUT})\r\n    dispatch({type:USER_DETAILS_RESET})\r\n    dispatch({type:ORDER_LIST_MY_RESET})\r\n    dispatch({type:USER_LIST_RESET})\r\n\r\n\r\n  \r\n}\r\n\r\nexport const register = (name,email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type:USER_REGISTER_REQUEST\r\n        })\r\n        const config = {\r\n            headers:{\r\n                'Content-type':'application/json'\r\n            }\r\n        }\r\n        const {data} = await axios.post(\r\n            '/api/users/register/',\r\n            {'name':name, 'email':email, 'password':password },\r\n            config\r\n        )\r\n        dispatch({\r\n            type:USER_REGISTER_SUCCESS,\r\n            payload:data\r\n        })\r\n        dispatch({\r\n            type:USER_LOGIN_SUCCESS,\r\n            payload:data\r\n        })\r\n        localStorage.setItem('userInfo',JSON.stringify(data))\r\n\r\n    }catch (error){\r\n        dispatch({\r\n            type:USER_REGISTER_FAIL,\r\n            payload:error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n                :error.message,\r\n        })\r\n    }\r\n}\r\nexport const getUserDetails = (id) => async (dispatch,getState) => {\r\n    try {\r\n        dispatch({\r\n            type:USER_DETAILS_REQUEST\r\n        })\r\n        const{\r\n            userLogin:{ userInfo },\r\n          \r\n        } = getState()\r\n        const config = {\r\n\r\n            headers:{\r\n                'Content-type':'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const {data} = await axios.get(\r\n            `/api/users/${id}`,\r\n            config\r\n        )\r\n        dispatch({\r\n            type:USER_DETAILS_SUCCESS,\r\n            payload:data\r\n        })\r\n\r\n\r\n    }catch (error){\r\n        dispatch({\r\n            type:USER_DETAILS_FAIL,\r\n            payload:error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n                :error.message,\r\n        })\r\n    }}\r\nexport const updateUserProfile = (user) => async (dispatch,getState) => {\r\n    try {\r\n        dispatch({\r\n            type:USER_UPDATE_PROFILE_REQUEST\r\n        })\r\n        const{\r\n            userLogin:{ userInfo },\r\n\r\n        } = getState()\r\n        const config = {\r\n\r\n            headers:{\r\n                'Content-type':'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const {data} = await axios.put(\r\n            `/api/users/profile/update/`,\r\n            user,\r\n            config\r\n        )\r\n        dispatch({\r\n            type:USER_UPDATE_PROFILE_SUCCESS,\r\n            payload:data\r\n        })\r\n        dispatch({\r\n            type:USER_LOGIN_SUCCESS,\r\n            payload:data\r\n        })\r\n         localStorage.setItem('userInfo',JSON.stringify(data))\r\n\r\n\r\n\r\n    }catch (error){\r\n        dispatch({\r\n            type:USER_DETAILS_FAIL,\r\n            payload:error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n                :error.message,\r\n        })\r\n    }}\r\n\r\nexport const listUsers = () => async (dispatch,getState) => {\r\n    try {\r\n        dispatch({\r\n            type:USER_LIST_REQUEST\r\n        })\r\n        const{\r\n            userLogin:{ userInfo },\r\n\r\n        } = getState()\r\n        const config = {\r\n\r\n            headers:{\r\n                'Content-type':'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const {data} = await axios.get(\r\n            `/api/users/`,\r\n            config\r\n        )\r\n        dispatch({\r\n            type:USER_LIST_SUCCESS,\r\n            payload:data\r\n        })\r\n\r\n    }catch (error){\r\n        dispatch({\r\n            type:USER_LIST_FAIL,\r\n            payload:error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n                :error.message,\r\n        })\r\n    }}\r\n\r\nexport const deleteUser = (id) => async (dispatch,getState) => {\r\n    try {\r\n        dispatch({\r\n            type:USER_DELETE_REQUEST\r\n        })\r\n        const{\r\n            userLogin:{ userInfo },\r\n\r\n        } = getState()\r\n        const config = {\r\n\r\n            headers:{\r\n                'Content-type':'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const {data} = await axios.delete(\r\n            `/api/users/delete/${id}/`,\r\n            config\r\n        )\r\n        dispatch({\r\n            type:USER_DELETE_SUCCESS,\r\n            payload:data\r\n        })\r\n\r\n    }catch (error){\r\n        dispatch({\r\n            type:USER_DELETE_FAIL,\r\n            payload:error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n                :error.message,\r\n        })\r\n    }}\r\n\r\nexport const updateUser = (user) => async (dispatch,getState) => {\r\n    try {\r\n        dispatch({\r\n            type:USER_UPDATES_REQUEST\r\n        })\r\n        const{\r\n            userLogin:{ userInfo },\r\n\r\n        } = getState()\r\n        const config = {\r\n\r\n            headers:{\r\n                'Content-type':'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const {data} = await axios.put(\r\n            `/api/users/update/${user._id}/`,\r\n            user,\r\n            config\r\n        )\r\n        dispatch({\r\n            type:USER_UPDATES_SUCCESS,\r\n        })\r\n        dispatch({\r\n            type:USER_DETAILS_SUCCESS,\r\n            payload:data\r\n        })\r\n\r\n    }catch (error){\r\n        dispatch({\r\n            type:USER_UPDATES_FAIL,\r\n            payload:error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n                :error.message,\r\n        })\r\n    }}","import React,{useState} from \"react\";\r\nimport {Button,Form} from \"react-bootstrap\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nfunction SearchBox () {\r\n    const [keyword, setKeyword] = useState('')\r\n    let history = useHistory()\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if (keyword){\r\n            history.push(`/?keyword=${keyword}&page=1`)\r\n        }else {\r\n            history.push(history.push(history.location.pathname))\r\n\r\n        }\r\n\r\n    }\r\n    return(\r\n        <Form onSubmit={submitHandler} inline>\r\n\r\n            <Form.Control\r\n                type='text'\r\n                name='q'\r\n                onChange={(e) =>setKeyword(e.target.value)}\r\n                className='mr-sm-2 ml-sm-5'\r\n            >\r\n\r\n            </Form.Control>\r\n            <Button type='submit' variant='outline-success' className='p-2'>Submit</Button>\r\n\r\n        </Form>\r\n    )\r\n\r\n}\r\nexport default SearchBox","import React from \"react\";\r\nimport {logout} from \"../actions/UserActions\";\r\nimport {useDispatch,useSelector} from \"react-redux\";\r\nimport {Container, Nav, Navbar, Col, NavDropdown} from \"react-bootstrap\";\r\nimport {LinkContainer} from \"react-router-bootstrap\";\r\nimport SearchBox from \"./SearchBox\";\r\n\r\nfunction Header(){\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const  { userInfo } = userLogin\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout())\r\n\r\n    }\r\n\r\n    return(\r\n        <div>\r\n             <header>\r\n                 <Navbar bg=\"dark\" variant='dark' expand=\"lg\" collapseOnSelect>\r\n                      <Container>\r\n                          <LinkContainer to='/'>\r\n                                < Navbar.Brand>Pro sellers</Navbar.Brand>\r\n                          </LinkContainer>\r\n                        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                          <SearchBox />\r\n                          <Nav className=\"ml-auto\">\r\n                              <LinkContainer to='/cart'>\r\n                                         <Nav.Link ><i className='fas fa-shopping-cart' />Cart</Nav.Link>\r\n                              </LinkContainer>\r\n\r\n                              {userInfo ? (\r\n                                  <NavDropdown id='username' title={userInfo.name}>\r\n                                  <LinkContainer to='/profile'>\r\n                                      <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                                  </LinkContainer>\r\n                                      <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>\r\n\r\n                                  </NavDropdown>\r\n                              ): (\r\n                                  <LinkContainer to='/login'>\r\n                                   <Nav.Link><i className='fas fa-user' />Login</Nav.Link>\r\n                                  </LinkContainer>\r\n                              )}\r\n                              {userInfo && userInfo.isAdmin && (\r\n                                  <NavDropdown title='Admin' id='Adminmenu'>\r\n                                  <LinkContainer to='/admin/userlist'>\r\n                                      <NavDropdown.Item>Users</NavDropdown.Item>\r\n                                  </LinkContainer>\r\n                                  <LinkContainer to='/admin/productlist'>\r\n                                      <NavDropdown.Item>Products</NavDropdown.Item>\r\n                                  </LinkContainer>\r\n                                  <LinkContainer to='/admin/orderlist'>\r\n                                      <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                                  </LinkContainer>\r\n\r\n                                </NavDropdown>\r\n\r\n\r\n                              )}\r\n\r\n\r\n                          </Nav>\r\n                        </Navbar.Collapse>\r\n                      </Container>\r\n                 </Navbar>\r\n\r\n             </header>\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default Header","import React from \"react\";\r\nimport {Container, Row,Col} from \"react-bootstrap\";\r\n\r\nfunction Footer() {\r\n    return(\r\n        <footer>\r\n            <Container>\r\n                <Row>\r\n                    <Col className='text-center py-3'>\r\n                        Copyright &copy; Dericmiano 2021\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </footer>\r\n    )\r\n\r\n}\r\nexport default Footer","import React from \"react\";\r\nimport {Alert} from \"react-bootstrap\";\r\n\r\nfunction Message({ variant, children }) {\r\n    return(\r\n        <Alert variant={variant}>\r\n            {children}\r\n\r\n        </Alert>\r\n    )\r\n\r\n}\r\nexport default Message","import React from 'react'\r\nimport { Pagination } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nfunction Paginate({ pages, page, keyword = '', isAdmin = false }) {\r\n    if (keyword) {\r\n        keyword = keyword.split('?keyword=')[1].split('&')[0]\r\n    }\r\n\r\n    return (pages > 1 && (\r\n        <Pagination>\r\n            {[...Array(pages).keys()].map((x) => (\r\n                <LinkContainer\r\n                    key={x + 1}\r\n                    to={!isAdmin ?\r\n                        `/?keyword=${keyword}&page=${x + 1}`\r\n                        : `/admin/productlist/?keyword=${keyword}&page=${x + 1}`\r\n                    }\r\n                >\r\n                    <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\r\n                </LinkContainer>\r\n            ))}\r\n        </Pagination>\r\n    )\r\n    )\r\n}\r\n\r\nexport default Paginate","import React from \"react\";\r\nimport {Spinner} from \"react-bootstrap\";\r\n\r\nfunction Loader() {\r\n    return(\r\n        <Spinner\r\n            animation='border'\r\n            role='status'\r\n            style={{\r\n                height:'100px',\r\n                width:'100px',\r\n                margin:'auto',\r\n                display:'block'\r\n            }}\r\n        >\r\n            <span className='sr-only'>Loading....</span>\r\n\r\n\r\n        </Spinner>\r\n    )\r\n\r\n}\r\nexport default Loader","import React from \"react\";\r\nfunction Rating({value,text,color}) {\r\n    return(\r\n        <div className='rating'>\r\n            <span>\r\n                <i style={{color}} className={\r\n                    value >=1\r\n                    ? 'fas fa-star'\r\n                        : value <= 0.5\r\n                    ? 'fas fa-star-half-alt'\r\n                        : 'far fa-star'\r\n                } >\r\n\r\n                </i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}} className={\r\n                    value >=2\r\n                    ? 'fas fa-star'\r\n                        : value <= 1.5\r\n                    ? 'fas fa-star-half-alt'\r\n                        : 'far fa-star'\r\n                } >\r\n\r\n                </i>\r\n            </span><span>\r\n                <i style={{color}} className={\r\n                    value >=3\r\n                    ? 'fas fa-star'\r\n                        : value <= 2.5\r\n                    ? 'fas fa-star-half-alt'\r\n                        : 'far fa-star'\r\n                } >\r\n\r\n                </i>\r\n            </span><span>\r\n                <i style={{color}} className={\r\n                    value >=4\r\n                    ? 'fas fa-star'\r\n                        : value <= 3.5\r\n                    ? 'fas fa-star-half-alt'\r\n                        : 'far fa-star'\r\n                } >\r\n\r\n                </i>\r\n            </span><span>\r\n                <i style={{color}} className={\r\n                    value >=5\r\n                    ? 'fas fa-star'\r\n                        : value <= 4.5\r\n                    ? 'fas fa-star-half-alt'\r\n                        : 'far fa-star'\r\n                } >\r\n\r\n                </i>\r\n            </span>\r\n            <span>\r\n                {text && text}\r\n            </span>\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default Rating","import React from \"react\";\r\nimport {Card} from \"react-bootstrap\";\r\nimport Rating from \"./Rating\";\r\nimport {findByRole} from \"@testing-library/react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nfunction Product({product}) {\r\n    return(\r\n        <Card className='my-3 p-3 rounded'>\r\n            <Link to={`/product/${product._id}`}>\r\n                <Card.Img src={product.image}/>\r\n            </Link>\r\n           <Card.Body>\r\n               <Link to={`/product/${product._id}`}>\r\n                   <Card.Title as='div'>\r\n                       <strong>\r\n                           {product.name}\r\n                       </strong>\r\n                   </Card.Title>\r\n               </Link>\r\n                <Card.Text as='div'>\r\n                       <div className='my-3'>\r\n                           <Rating value={product.rating} text={`${product.numReviews} reviews`} color={'#f8e825'} />\r\n                       </div>\r\n                   </Card.Text>\r\n                   <Card.Text as='h3'>\r\n                       Ksh{product.price}\r\n                   </Card.Text>\r\n           </Card.Body>\r\n\r\n        </Card>\r\n    )\r\n\r\n}\r\nexport  default Product","import axios from \"axios\";\r\nimport {PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_FAIL,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_FAIL,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_FAIL,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,PRODUCT_CREATE_REVIEW_FAIL,PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,PRODUCT_TOP_REQUEST,PRODUCT_TOP_FAIL,\r\n\r\n\r\n} from \"../constants/productConstants\";\r\n\r\nexport const listProducts = (keyword='') =>async (dispatch) =>{\r\n    try{\r\n        dispatch({type:PRODUCT_LIST_REQUEST})\r\n        const { data } = await axios.get(`/api/products${keyword}`)\r\n\r\n        dispatch({\r\n            type:PRODUCT_LIST_SUCCESS,\r\n            payload:data\r\n        })\r\n\r\n    }catch (error){\r\n        dispatch({\r\n            type:PRODUCT_LIST_FAIL,\r\n            payload:error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n                :error.message,\r\n        })\r\n\r\n    }\r\n\r\n}\r\nexport const listTopProducts = () =>async (dispatch) =>{\r\n    try{\r\n        dispatch({type:PRODUCT_TOP_REQUEST})\r\n        const { data } = await axios.get(`/api/products/top/`)\r\n\r\n        dispatch({\r\n            type:PRODUCT_TOP_SUCCESS,\r\n            payload:data\r\n        })\r\n\r\n    }catch (error){\r\n        dispatch({\r\n            type:PRODUCT_TOP_FAIL,\r\n            payload:error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n                :error.message,\r\n        })\r\n\r\n    }\r\n\r\n}\r\nexport const listProductDetails = (id) =>async (dispatch) =>{\r\n    try{\r\n        dispatch({type:PRODUCT_DETAILS_REQUEST})\r\n        const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n        dispatch({\r\n            type:PRODUCT_DETAILS_SUCCESS,\r\n            payload:data\r\n        })\r\n\r\n    }catch (error){\r\n        dispatch({\r\n            type:PRODUCT_DETAILS_FAIL,\r\n            payload:error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n                :error.message,\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.delete(\r\n            `/api/products/delete/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: PRODUCT_DELETE_SUCCESS,\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/products/create/`,\r\n            {},\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: PRODUCT_CREATE_SUCCESS,\r\n            payload:data,\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/products/update/${product._id}/`,\r\n            product,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_SUCCESS,\r\n            payload:data,\r\n        })\r\n\r\n        dispatch({\r\n            type:PRODUCT_DETAILS_SUCCESS,\r\n            payload:data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\nexport const createProductReview = (productId,review) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/products/${productId}/reviews/`,\r\n            review,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_SUCCESS,\r\n            payload:data,\r\n        })\r\n\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n","import React,{useEffect} from \"react\";\r\nimport {useDispatch,useSelector} from \"react-redux\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {Carousel, Image} from \"react-bootstrap\";\r\nimport Loader from \"./Loader\";\r\nimport Message from \"./Message\";\r\nimport {listTopProducts} from \"../actions/productActions\";\r\n\r\nfunction ProductCarousel() {\r\n    const dispatch = useDispatch()\r\n    const productTopRated = useSelector(state => state.productTopRated)\r\n    const {error, loading, products}  = productTopRated\r\n\r\n    useEffect(() =>{\r\n        dispatch(listTopProducts())\r\n    },dispatch)\r\n    return(\r\n       loading ? <Loader/>\r\n           : error ? <Message variant='danger'>{error}</Message>\r\n           : (\r\n               <Carousel pause='hover' className='bg-black'>\r\n                   {products.map(product =>(\r\n                       <Carousel.Item key={product._id}>\r\n                           <Link to={`/product/${product._id}`}>\r\n                               <Image src={product.image} alt={product.name} fluid/>\r\n                               <Carousel.Caption className='carousel.caption'>\r\n                                   <h4>\r\n                                       {product.name} (ksh{product.price})\r\n                                   </h4>\r\n\r\n                               </Carousel.Caption>\r\n\r\n                           </Link>\r\n                       </Carousel.Item>\r\n                   ))}\r\n\r\n               </Carousel>\r\n               )\r\n    )\r\n\r\n}\r\nexport default ProductCarousel","import React, {useState,useEffect} from \"react\";\r\nimport {useDispatch,useSelector} from \"react-redux\";\r\nimport {Row,Col} from \"react-bootstrap\";\r\nimport Message from \"../components/Message\";\r\nimport Paginate from \"../components/Paginate\";\r\nimport Loader from \"../components/Loader\";\r\nimport Product from \"../components/Product\";\r\nimport ProductCarousel from \"../components/ProductCarousel\";\r\nimport {listProducts} from \"../actions/productActions\";\r\n\r\nfunction HomeScreen({history}) {\r\n    const dispatch = useDispatch()\r\n    const productList = useSelector(state => state.productList)\r\n    const{error,loading,products, page, pages} = productList\r\n    let keyword = history.location.search\r\n    // console.log(keyword)\r\n    useEffect(() =>{\r\n        dispatch(listProducts(keyword))\r\n\r\n    },[dispatch, keyword])\r\n\r\n    return(\r\n        <div>\r\n            {!keyword && <ProductCarousel/>}\r\n            <h2>latest products updated</h2>\r\n            {loading ? <Loader/>\r\n                : error ? <Message variant='danger'>{error}</Message>\r\n                    :\r\n                    <div>\r\n                        <Row>\r\n                            {products.map(product =>(\r\n                            <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                                <Product product={product}/>\r\n                             </Col>\r\n                        ))}\r\n                    </Row>\r\n                        <Paginate page={page} pages={pages} keyword={keyword}/>\r\n                    </div>\r\n            }\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default HomeScreen\r\n\r\n","import React, {useState,useEffect} from \"react\";\r\nimport {Router} from \"react-router-dom\";\r\n\r\nimport {Link} from \"react-router-dom\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport {Row, Col, Button, Card, ListGroup, Image, ListGroupItem, Form} from \"react-bootstrap\";\r\nimport Rating from \"../components/Rating\";\r\n// import Product from \"../components/Product\";\r\n// import products from \"../products\";\r\nimport {useDispatch,useSelector} from \"react-redux\";\r\nimport {listProductDetails, createProductReview} from \"../actions/productActions\";\r\nimport {PRODUCT_CREATE_REVIEW_RESET} from \"../constants/productConstants\";\r\n\r\nfunction ProductScreen({match, history}) {\r\n    const [qty, setQty] = useState(1)\r\n    const [rating, setRating] = useState(0)\r\n    const [comment, setComment] = useState('')\r\n\r\n    // const product = products.find((p) => p._id === match.params.id)\\\r\n    const  dispatch =useDispatch()\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const {loading,error,product} = productDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const productReviewCreate = useSelector(state => state.productReviewCreate)\r\n    const {\r\n        loading:loadingProductReview,\r\n        error:errorProductReview,\r\n        success:successProductReview\r\n    } = productReviewCreate\r\n\r\n\r\n\r\n    useEffect(()=>{\r\n        if (successProductReview){\r\n            setRating(0)\r\n            setComment('')\r\n            dispatch({type:PRODUCT_CREATE_REVIEW_RESET})\r\n        }\r\n        dispatch(listProductDetails(match.params.id))\r\n\r\n    },[dispatch,match,successProductReview] )\r\n    const addToCartHandler = () => {\r\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n\r\n    }\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(createProductReview(\r\n            match.params.id, {\r\n                rating,\r\n                comment//sending the data to the back end\r\n            }\r\n        ))\r\n      \r\n    }\r\n    return(\r\n        <div>\r\n            <Link to='/' className='btn btn-light my-3'> Go Back</Link>\r\n            {loading ? <Loader/>\r\n            : error ?\r\n                    <Message variant='danger'>{error}</Message>\r\n                    :(\r\n                        <div>\r\n                        <Row>\r\n                            <Col md={6}>\r\n                                <Image src={product.image} alt={product.name} fluid/>\r\n\r\n                            </Col>\r\n                            <Col md={3}>\r\n                                <ListGroup variant=\"flush\">\r\n                                    <ListGroupItem>\r\n                                        <h3>{product.name}</h3>\r\n                                    </ListGroupItem>\r\n                                    <ListGroupItem>\r\n                                        <Rating value={product.rating} text={`${product.numReviews} reviews`} color={\"#f8e825\"}/>\r\n                                    </ListGroupItem>\r\n                                    <ListGroupItem>\r\n                                        Price:ksh{product.price}\r\n                                    </ListGroupItem>\r\n                                    <ListGroupItem>\r\n                                        Description:{product.description}\r\n                                    </ListGroupItem>\r\n\r\n                                </ListGroup>\r\n\r\n                            </Col>\r\n                            <Col md={3}>\r\n                                <Card>\r\n                                    <ListGroup variant='flush'>\r\n                                        <ListGroupItem>\r\n                                            <Row>\r\n                                                <Col>\r\n                                                    Price:\r\n                                                </Col>\r\n                                                <Col>\r\n                                                    <strong>ksh {product.price}</strong>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroupItem>\r\n                                        <ListGroupItem>\r\n                                            <Row>\r\n                                                <Col>\r\n                                                    Status:\r\n                                                </Col>\r\n                                                <Col>\r\n                                                    {product.countInStock > 0 ? 'in stock' : 'out of stock' }\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroupItem>\r\n                                        {product.countInStock > 0 &&(\r\n                                            <ListGroupItem>\r\n                                                <Row>\r\n                                                    <Col>\r\n                                                        Qty\r\n                                                    </Col><Col xs='auto' className='my-1'>\r\n                                                    <Form.Control as='select'\r\n                                                                  value={qty}\r\n                                                                  onChange={(e) =>\r\n                                                                      setQty(e.target.value)}\r\n\r\n                                                    >{\r\n                                                        [...Array(product.countInStock).keys()].map((x) =>(\r\n                                                            <option key={x + 1} value={x+1}>\r\n                                                                {x+1}\r\n                                                            </option>\r\n                                                        ))\r\n                                                    }\r\n\r\n                                                    </Form.Control>\r\n                                                </Col>\r\n                                                </Row>\r\n                                            </ListGroupItem>\r\n                                        )}\r\n                                        <ListGroupItem>\r\n                                            <Button onClick={addToCartHandler}\r\n                                                    className='btn-block'\r\n                                                    disabled={product.countInStock===0}\r\n                                                    type='button'>Add to Cart\r\n                                            </Button>\r\n                                        </ListGroupItem>\r\n\r\n                                    </ListGroup>\r\n                                </Card>\r\n\r\n                            </Col>\r\n                        </Row>\r\n                            <Row>\r\n                                <Col md={6}>\r\n                                    <h4>Reviews</h4>\r\n                                    {product.reviews.length === 0 && <Message variant='info'>No reviws</Message> }\r\n                                    <ListGroup variant='flush'>\r\n                                        {product.reviews.map((review) =>(\r\n                                            <ListGroup.Item key={review._id}>\r\n                                                <strong>{review.name}</strong>\r\n                                                <Rating value={review.rating} color={'#f8e825'}/>\r\n                                                <p>{review.createdAt}</p>\r\n                                                <p>{review.comment}</p>\r\n\r\n                                            </ListGroup.Item>\r\n                                        ))}\r\n                                        <ListGroupItem>\r\n                                            <h4>write  review</h4>\r\n                                            {loadingProductReview && <Loader/>}\r\n                                            {successProductReview && <Message variant='success'>Review submitted</Message> }\r\n                                            {errorProductReview && <Message variant='danger'>{errorProductReview}</Message> }\r\n\r\n                                            {userInfo ? (\r\n                                                <form onSubmit={submitHandler}>\r\n                                                    <Form.Group controlId='rating'>\r\n                                                        <Form.Label>\r\n                                                            Rating\r\n                                                        </Form.Label>\r\n                                                        <Form.Control as='select'\r\n                                                                      value={rating}\r\n                                                                      onChange={(e) =>\r\n                                                                          setRating(\r\n                                                                          e.target.value)}\r\n                                                        >\r\n                                                            <option value=''>select..</option>\r\n                                                            <option value='1'>1-poor..</option>\r\n                                                            <option value='2'>2-fair..</option>\r\n                                                            <option value='3'>3-good..</option>\r\n                                                            <option value='4'>4-very good..</option>\r\n                                                            <option value='5'>5-excellent..</option>\r\n\r\n                                                        </Form.Control>\r\n\r\n                                                    </Form.Group>\r\n                                                    <Form.Group controlId='comment'>\r\n                                                        <Form.Label>\r\n                                                            review\r\n                                                        </Form.Label>\r\n                                                        <Form.Control\r\n                                                             as='textarea'\r\n                                                            row='5'\r\n                                                            value={comment}\r\n                                                            onChange={(e) => setComment(\r\n                                                                e.target.value\r\n                                                            )}\r\n                                                        >good</Form.Control>\r\n                                                        <Button\r\n                                                            disabled={loadingProductReview}\r\n                                                            type='submit'\r\n                                                            variant='primary'\r\n                                                        >Submit</Button>\r\n                                                    </Form.Group>\r\n                                                </form>\r\n                                            ):(\r\n                                                <Message variant='info'>Please <Link to='/login'>login</Link> To write a review</Message>\r\n                                            )}\r\n                                        </ListGroupItem>\r\n                                    </ListGroup>\r\n\r\n\r\n                                </Col>\r\n                            </Row>\r\n                        </div>\r\n\r\n                    )\r\n            }\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default ProductScreen","import axios from \"axios\";\r\nimport {CART_ADD_ITEM, CART_REMOVE_ITEM,CART_SAVE_SHIPPING_ADDRESS,CART_SAVE_PAYMENT_METHOD} from \"../constants/cartConstants\";\r\n\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n    const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n    dispatch({\r\n        type:CART_ADD_ITEM,\r\n        payload:{\r\n            product:data._id,\r\n            name:data.name,\r\n            image:data.image,\r\n            price:data.price,\r\n            countInStock: data.countInStock,\r\n            qty\r\n        }\r\n    })\r\n    localStorage.setItem('cartItems',JSON.stringify(getState().cart.cartItems))\r\n}\r\nexport const removeFromCart = (id) =>(dispatch, getState) => {\r\n    dispatch({\r\n        type:CART_REMOVE_ITEM,\r\n        payload:id,\r\n\r\n    })\r\n    localStorage.setItem('cartItems',JSON.stringify(getState().cart.cartItems))\r\n\r\n}\r\n\r\nexport const saveShippingAddress = (data) =>(dispatch) => {\r\n    dispatch({\r\n        type:CART_SAVE_SHIPPING_ADDRESS,\r\n        payload:data,\r\n\r\n    })\r\n    localStorage.setItem('shippingAddress',JSON.stringify(data))\r\n\r\n}\r\n\r\nexport const savePaymentMethod = (data) =>(dispatch) => {\r\n    dispatch({\r\n        type:CART_SAVE_PAYMENT_METHOD,\r\n        payload:data,\r\n\r\n    })\r\n    localStorage.setItem('paymentMethod',JSON.stringify(data))\r\n\r\n}","import React,{useEffect} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {useDispatch,useSelector} from \"react-redux\";\r\nimport {ListGroupItem, Col, Card, Image, Form, Button, Row, ListGroup} from \"react-bootstrap\";\r\nimport Message from \"../components/Message\";\r\nimport {addToCart, removeFromCart} from \"../actions/CartActions\";\r\n\r\n\r\nfunction CartScreen({match, location, history}) {\r\n    const productId = match.params.id\r\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const {cartItems} = cart\r\n    // console.log('cartitems', cartItems)\r\n\r\n    useEffect(() =>{\r\n        if (productId){\r\n            dispatch(addToCart(productId, qty))\r\n        }\r\n    },[dispatch,productId, qty] )\r\n    const removeFromCartHandler = (id) => {\r\n        dispatch(removeFromCart(id))\r\n\r\n    }\r\n    const checkOutHandler = () => {\r\n        history.push('/login?redirect=shipping')\r\n\r\n    }\r\n    return(\r\n        <Row>\r\n            <Col md={8}>\r\n                <h1>shopping cart</h1>\r\n                {cartItems.length === 0 ?(\r\n                    <Message variant='info'>\r\n                    Your cart is empty <Link to='/'>Go back</Link>\r\n                </Message>\r\n                    )\r\n                    :\r\n                    (\r\n                        <ListGroup variant='flush'>\r\n                            {cartItems.map( item =>(\r\n                                <ListGroupItem key={item.product}>\r\n                                    <Row>\r\n                                        <Col md={2}>\r\n                                            <Image src={item.image} alt={item.name} fluid rounded/>\r\n                                        </Col>\r\n                                        <Col md={3}>\r\n                                            <Link to={`/product/${item.product}`}>\r\n                                                {item.name}\r\n                                            </Link>\r\n                                        </Col>\r\n                                        <Col md={2}>\r\n                                            ksh {item.price}\r\n                                        </Col>\r\n                                        <Col md={3}>\r\n                                            <Form.Control as='select'\r\n                                                      value={item.qty}\r\n                                                      onChange={(e) =>\r\n                                                          dispatch(addToCart(item.product, Number(e.target.value)))}\r\n\r\n                                        >{\r\n                                            [...Array(item.countInStock).keys()].map((x) =>(\r\n                                                <option key={x + 1} value={x + 1}>\r\n                                                    { x+ 1}\r\n                                                </option>\r\n                                            ))\r\n                                        }\r\n\r\n                                        </Form.Control>\r\n                                        </Col>\r\n                                        <Col md={1}>\r\n                                            <Button type='button' variant='light'\r\n                                                    onClick={()=> removeFromCartHandler(item.product)}\r\n                                            ><i className='fas fa-trash'/>\r\n\r\n                                            </Button>\r\n\r\n                                        </Col>\r\n                                    </Row>\r\n\r\n                                </ListGroupItem>\r\n                                )\r\n\r\n                            )}\r\n\r\n                        </ListGroup>\r\n                    )\r\n                }\r\n\r\n            </Col>\r\n            <Col>\r\n                <Card md={4}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Sub Total ({cartItems.reduce((acc, item) => acc+item.qty, 0)})items</h2>\r\n                            ksh{cartItems.reduce((acc, item) => acc+item.qty * item.price, 0).toFixed(2)}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                        <ListGroup.Item>\r\n                            <Button type='button' className='btn-block'\r\n                            disabled={cartItems.length===0}\r\n                            onClick={checkOutHandler}\r\n                            >\r\n                                proceed to check out\r\n                            </Button>\r\n                        </ListGroup.Item>\r\n                </Card>\r\n            </Col>\r\n\r\n\r\n        </Row>\r\n    )\r\n\r\n}\r\nexport default CartScreen","import React from \"react\";\r\nimport {Container,Row,Col} from \"react-bootstrap\";\r\n\r\nfunction FormContainer({children}) {\r\n    return(\r\n        <Container>\r\n            <Row className='justify-content-md-center'>\r\n                <Col xs={12} md={6} >\r\n                    {children}\r\n                </Col>\r\n\r\n            </Row>\r\n\r\n        </Container>\r\n    )\r\n\r\n}\r\nexport default FormContainer","import React,{useState,useEffect} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {Form, Button, Row, Col, FormGroup} from \"react-bootstrap\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport {login} from \"../actions/UserActions\";\r\nimport FormContainer from \"../components/FormContainer\";\r\n\r\n\r\nfunction LoginScreen({location, history}) {\r\n    const  [email, setEmail] = useState('')\r\n    const  [password, setPassword] = useState('')\r\n    const dispatch = useDispatch()\r\n\r\n    const  redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const {error, loading, userInfo} = userLogin\r\n\r\n    useEffect(() => {\r\n        if (userInfo){\r\n            history.push(redirect)\r\n\r\n        }\r\n    },[history,userInfo, redirect])//dependencies\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(login(email,password))\r\n    }\r\n\r\n    return(\r\n        <FormContainer>\r\n            <h1>sign in</h1>\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader/>}\r\n            <Form onSubmit={submitHandler}>\r\n                <FormGroup controlId={email}>\r\n                    <Form.Label>Email Adress</Form.Label>\r\n                    <Form.Control\r\n                    type='email'\r\n                    placeholder='enter email'\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    >\r\n\r\n                    </Form.Control>\r\n\r\n                </FormGroup>\r\n\r\n\r\n                <FormGroup controlId={password}>\r\n                    <Form.Label>Pass word</Form.Label>\r\n                    <Form.Control\r\n                    type='password'\r\n                    placeholder='enter password'\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                    >\r\n\r\n                    </Form.Control>\r\n\r\n                </FormGroup>\r\n                <Button type='submit' variant='primary'>sign in</Button>\r\n            </Form>\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    New customer? <Link\r\n                    to={redirect ? `/register?redirect=${redirect}` : '/register'}>Register</Link>\r\n                </Col>\r\n\r\n            </Row>\r\n\r\n        </FormContainer>\r\n    )\r\n\r\n}\r\nexport default LoginScreen","import React,{useState,useEffect} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {Form, Button, Row, Col, FormGroup} from \"react-bootstrap\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport {login, register} from \"../actions/UserActions\";\r\nimport FormContainer from \"../components/FormContainer\";\r\n\r\n\r\nfunction RegisterScreen({location, history}) {\r\n    const  [name, setName] = useState('')\r\n    const  [email, setEmail] = useState('')\r\n    const  [password, setPassword] = useState('')\r\n    const  [confirmPassword, setConfirmPassword] = useState('')\r\n    const  [message, setMessage] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const  redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    const userRegister = useSelector(state => state.userRegister)\r\n    const {error, loading, userInfo} = userRegister\r\n\r\n    useEffect(() => {\r\n        if (userInfo){\r\n            history.push(redirect)\r\n\r\n        }\r\n    },[history,userInfo, redirect])//dependencies\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if (password !== confirmPassword){\r\n            setMessage(\"pass words dont match\")\r\n        }else {\r\n            dispatch(register(name,email,password))\r\n\r\n        }\r\n    }\r\n    return(\r\n        <FormContainer>\r\n            <h1>Register</h1>\r\n            {message && <Message variant='danger'>{message}</Message>}\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader/>}\r\n            <Form onSubmit={submitHandler}>\r\n                 <FormGroup controlId={name}>\r\n                    <Form.Label>name</Form.Label>\r\n                    <Form.Control\r\n                    type='name'\r\n                    required\r\n                    placeholder='enter name'\r\n                    value={name}\r\n                    onChange={(e) => setName(e.target.value)}\r\n                    >\r\n\r\n                    </Form.Control>\r\n\r\n                </FormGroup>\r\n                 <FormGroup controlId={email}>\r\n                    <Form.Label>Email Adress</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                    type='email'\r\n                    placeholder='enter email'\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    >\r\n\r\n                    </Form.Control>\r\n\r\n                </FormGroup>\r\n                 <FormGroup controlId={password}>\r\n                    <Form.Label>Pass word</Form.Label>\r\n                    <Form.Control\r\n                    type='password'\r\n                    required\r\n                    placeholder='enter password'\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                    >\r\n\r\n                    </Form.Control>\r\n\r\n                </FormGroup>\r\n                <FormGroup controlId={confirmPassword}>\r\n                    <Form.Label> confirm Pass word</Form.Label>\r\n                    <Form.Control\r\n                    type='password'\r\n                    required\r\n                    placeholder='confirm password'\r\n                    value={confirmPassword}\r\n                    onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    >\r\n\r\n                    </Form.Control>\r\n\r\n                </FormGroup>\r\n                <Button type='submit' variant='primary'>Register</Button>\r\n\r\n            </Form>\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    Have an account ? <Link\r\n                    to={redirect ? `/login?redirect=${redirect}` : '/login'}>sign in</Link>\r\n                </Col>\r\n\r\n            </Row>\r\n\r\n\r\n\r\n        </FormContainer>\r\n    )\r\n\r\n}\r\nexport  default RegisterScreen","import React,{useState,useEffect} from \"react\";\r\nimport {Form, Button, Row, Col, FormGroup,Table} from \"react-bootstrap\";\r\nimport {LinkContainer} from \"react-router-bootstrap\";\r\n\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport {getUserDetails} from \"../actions/UserActions\";\r\nimport {updateUserProfile,register} from \"../actions/UserActions\";\r\nimport {USER_UPDATE_PROFILE_RESET} from \"../constants/userConstants\";\r\nimport {listMyOrders} from \"../actions/OrderActions\";\r\n\r\nfunction ProfileScreen({history}) {\r\n    const  [name, setName] = useState('')\r\n    const  [email, setEmail] = useState('')\r\n    const  [password, setPassword] = useState('')\r\n    const  [confirmPassword, setConfirmPassword] = useState('')\r\n    const  [message, setMessage] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const {error, loading, user} = userDetails\r\n\r\n    //to make sure user is loged in\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const {userInfo} = userLogin\r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n    const {success} = userUpdateProfile\r\n\r\n    const orderListMy = useSelector(state => state.orderListMy)\r\n    const {loading:loadingOrders, error:errorOrders,orders} = orderListMy\r\n\r\n\r\n    useEffect(() => {\r\n        if (!userInfo){\r\n            history.push('/login')\r\n\r\n        }else{\r\n            if (!user || !user.name || success || userInfo._id !== user._id){\r\n                dispatch({\r\n                    type:USER_UPDATE_PROFILE_RESET\r\n                })\r\n                dispatch(getUserDetails('profile'))\r\n                dispatch(listMyOrders())\r\n            }else{\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n        }\r\n    },[dispatch,history,userInfo, user, success])//dependencies\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if (password !== confirmPassword){\r\n            setMessage(\"pass words dont match\")\r\n        } else {\r\n             dispatch(updateUserProfile({\r\n                 'id':user._id,\r\n                 'name':name,\r\n                 'email':email,\r\n                 'password':password,\r\n\r\n             }))\r\n             setMessage(\"\")\r\n\r\n\r\n                // dispatch(register(name,email,password))\r\n\r\n        }\r\n    }\r\n    return(\r\n        <Row>\r\n            <Col md={3}>\r\n                <h1>User profile</h1>\r\n                {message && <Message variant='danger'>{message}</Message>}\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader/>}\r\n            <Form onSubmit={submitHandler}>\r\n                 <FormGroup controlId={name}>\r\n                    <Form.Label>name</Form.Label>\r\n                    <Form.Control\r\n                    type='name'\r\n                    required\r\n                    placeholder='enter name'\r\n                    value={name}\r\n                    onChange={(e) => setName(e.target.value)}\r\n                    >\r\n\r\n                    </Form.Control>\r\n\r\n                </FormGroup>\r\n                 <FormGroup controlId={email}>\r\n                    <Form.Label>Email Adress</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                    type='email'\r\n                    placeholder='enter email'\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    >\r\n\r\n                    </Form.Control>\r\n\r\n                </FormGroup>\r\n                 <FormGroup controlId={password}>\r\n                    <Form.Label>Pass word</Form.Label>\r\n                    <Form.Control\r\n                    type='password'\r\n                    placeholder='enter password'\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                    >\r\n\r\n                    </Form.Control>\r\n\r\n                </FormGroup>\r\n                <FormGroup controlId={confirmPassword}>\r\n                    <Form.Label> confirm Pass word</Form.Label>\r\n                    <Form.Control\r\n                    type='password'\r\n\r\n                    placeholder='confirm password'\r\n                    value={confirmPassword}\r\n                    onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    >\r\n\r\n                    </Form.Control>\r\n\r\n                </FormGroup>\r\n                <Button type='submit' variant='primary'>Update</Button>\r\n\r\n            </Form>\r\n            </Col>\r\n            <Col md={9}>\r\n                <h1>my orders</h1>\r\n                {loadingOrders ? (\r\n                    <Loader/>\r\n                ): errorOrders ? (\r\n                    <Message variant='danger'>{errorOrders}</Message>\r\n                ):(\r\n                    <Table striped responsive className='table-sm'>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>Date</th>\r\n                                <th>Total</th>\r\n                                <th>Paid</th>\r\n                                <th>Delivered</th>\r\n                                <th></th>\r\n\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {orders.map(order => (\r\n                                <tr key={order._id}>\r\n                                    <td>{order._id}</td>\r\n                                    <td>{order.createdAt.substring(0,10)}</td>\r\n                                    <td>{order.totalPrice}</td>\r\n                                    <td>{order.isPaid ? order.paidAt : (\r\n                                        <i className='fas fa-times' style={{color:'red'}}/>\r\n                                    )}</td>\r\n                                    <td>\r\n                                        <LinkContainer to={`/order/${order._id}`}>\r\n                                            <Button className='btn-sm'>Details</Button>\r\n                                        </LinkContainer>\r\n                                    </td>\r\n                                    <td></td>\r\n\r\n                                </tr>\r\n                            ) )}\r\n\r\n                        </tbody>\r\n\r\n                    </Table>\r\n                )}\r\n            </Col>\r\n        </Row>\r\n    )\r\n\r\n}\r\nexport default ProfileScreen","import axios from \"axios\";\r\nimport {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_FAIL,\r\n    ORDER_CREATE_SUCCESS, ORDER_CREATE_RESET,\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_LIST_MY_RESET,ORDER_LIST_MY_SUCCESS,ORDER_LIST_MY_FAIL,ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_SUCCESS,ORDER_LIST_REQUEST,ORDER_LIST_FAIL,ORDER_DELIVER_REQUEST,ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_FAIL,ORDER_DELIVER_RESET,\r\n\r\n}\r\n    from \"../constants/OrderConstants\"\r\nimport {CART_CLEAR_ITEMS} from \"../constants/cartConstants\";\r\n\r\n\r\nexport const createOrder = (order) => async (dispatch,getState) => {\r\n    try {\r\n        dispatch({\r\n            type:ORDER_CREATE_REQUEST\r\n        })\r\n        const{\r\n            userLogin:{ userInfo },\r\n\r\n        } = getState()\r\n        const config = {\r\n\r\n            headers:{\r\n                'Content-type':'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const {data} = await axios.post(\r\n            `/api/orders/add/`,\r\n            order,\r\n            config\r\n        )\r\n        dispatch({\r\n            type:ORDER_CREATE_SUCCESS,\r\n            payload:data\r\n        })\r\n        dispatch({\r\n            type:CART_CLEAR_ITEMS,\r\n            payload:data\r\n        })\r\n        localStorage.removeItem('cartItems')\r\n    }catch (error){\r\n        dispatch({\r\n            type:ORDER_CREATE_FAIL,\r\n            payload:error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            :error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DETAILS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\nexport const payOrder = (id, paymentResult) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_PAY_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/orders/${id}/pay/`,\r\n            paymentResult,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_PAY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_PAY_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DELIVER_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/orders/${order._id}/deliver/`,\r\n            {},\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_DELIVER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DELIVER_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/myorders/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_MY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport {Nav} from \"react-bootstrap\";\r\nimport {LinkContainer} from \"react-router-bootstrap\"\r\n\r\nfunction CheckoutSteps({step1, step2, step3, step4}) {\r\n    return(\r\n        <Nav className='justify-content-center mb-4'>\r\n            <Nav.Item>\r\n                {step1 ? (\r\n                    <LinkContainer to='/login'>\r\n                         <Nav.Link>Login</Nav.Link>\r\n                    </LinkContainer>\r\n\r\n                ):(\r\n                    <Nav.Link disabled>Login</Nav.Link>\r\n                )}\r\n\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n                {step2 ? (\r\n                    <LinkContainer to='/shipping'>\r\n                         <Nav.Link>shipping</Nav.Link>\r\n                    </LinkContainer>\r\n\r\n                ):(\r\n                    <Nav.Link disabled>shipping</Nav.Link>\r\n                )}\r\n\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n                {step3 ? (\r\n                    <LinkContainer to='/payment'>\r\n                         <Nav.Link>payment</Nav.Link>\r\n                    </LinkContainer>\r\n\r\n                ):(\r\n                    <Nav.Link disabled>payment</Nav.Link>\r\n                )}\r\n\r\n            </Nav.Item>\r\n             <Nav.Item>\r\n                {step4 ? (\r\n                    <LinkContainer to='/placeOrder'>\r\n                         <Nav.Link>place Order</Nav.Link>\r\n                    </LinkContainer>\r\n\r\n                ):(\r\n                    <Nav.Link disabled>placeOrder</Nav.Link>\r\n                )}\r\n\r\n            </Nav.Item>\r\n\r\n\r\n        </Nav>\r\n    )\r\n\r\n}\r\nexport default CheckoutSteps","import React,{useState,useEffect} from \"react\";\r\nimport {Form, Button, FormGroup,} from \"react-bootstrap\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport {saveShippingAddress} from \"../actions/CartActions\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\n\r\nfunction ShippingScreen({history}) {\r\n    const  cart = useSelector(state => state.cart)\r\n    const {shippingAddress} = cart\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const  [address, setAddress] = useState(shippingAddress.address)\r\n    const  [city, setCity] = useState(shippingAddress.city)\r\n    const  [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n    const  [country, setCountry] = useState(shippingAddress.country)\r\n    \r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(saveShippingAddress({address,city,postalCode,country}))\r\n        history.push('/payment')\r\n        // console.log(\"submitted\")\r\n\r\n    }\r\n\r\n\r\n    return(\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2/>\r\n            <h1>Shipping</h1>\r\n            <Form onSubmit={submitHandler}>\r\n                <FormGroup controlId={address}>\r\n                    <Form.Label>Address</Form.Label>\r\n                    <Form.Control\r\n                    type='text'\r\n                    required\r\n                    placeholder='enter address'\r\n                    value={address ? address : ''}\r\n                    onChange={(e) => setAddress(e.target.value)}\r\n                    >\r\n\r\n                    </Form.Control>\r\n\r\n                </FormGroup>\r\n                 <FormGroup controlId={city}>\r\n                    <Form.Label>City</Form.Label>\r\n                    <Form.Control\r\n                    type='text'\r\n                    required\r\n                    placeholder='enter city'\r\n                    value={city ? city : ''}\r\n                    onChange={(e) => setCity(e.target.value)}\r\n                    >\r\n\r\n                    </Form.Control>\r\n\r\n                </FormGroup>\r\n                 <FormGroup controlId={postalCode}>\r\n                    <Form.Label>PostalCode</Form.Label>\r\n                    <Form.Control\r\n                    type='text'\r\n                    required\r\n                    placeholder='enter PostalCode'\r\n                    value={postalCode ? postalCode : ''}\r\n                    onChange={(e) => setPostalCode(e.target.value)}\r\n                    >\r\n\r\n                    </Form.Control>\r\n\r\n                </FormGroup>\r\n                 <FormGroup controlId={country}>\r\n                    <Form.Label>Country</Form.Label>\r\n                    <Form.Control\r\n                    type='text'\r\n                    required\r\n                    placeholder='enter Country'\r\n                    value={country ? country : ''}\r\n                    onChange={(e) => setCountry(e.target.value)}\r\n                    >\r\n\r\n                    </Form.Control>\r\n\r\n                </FormGroup>\r\n                <Button type='submit' variant='primary'>\r\n                    continue\r\n                </Button>\r\n\r\n\r\n\r\n\r\n            </Form>\r\n\r\n        </FormContainer>\r\n    )\r\n\r\n}\r\nexport  default  ShippingScreen","import React,{useState,useEffect} from \"react\";\r\nimport {Form, Button,Col, FormGroup,} from \"react-bootstrap\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\nimport {savePaymentMethod} from \"../actions/CartActions\";\r\nfunction PaymentScreen({ history }) {\r\n    const  cart = useSelector(state => state.cart)\r\n    const {shippingAddress} = cart\r\n    const dispatch = useDispatch()\r\n    const [paymentMethod, setPaymentMethod] = useState('Paypal')\r\n    if (!shippingAddress.address){\r\n        history.push('/shipping')\r\n    }\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(savePaymentMethod(paymentMethod))\r\n        history.push('/placeOrder')\r\n    }\r\n    return(\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 step3/>\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group>\r\n                    <Form.Label as='legend'>Select method</Form.Label>\r\n                    <Col>\r\n                        <Form.Check\r\n                            type='radio'\r\n                            label='Paypal or Credit Card'\r\n                            id='paypal'\r\n                            name='paymentMethod'\r\n                            checked\r\n                            onChange={(e) => setPaymentMethod(e.target.value)}\r\n                        >\r\n\r\n\r\n\r\n                        </Form.Check>\r\n                    </Col>\r\n                </Form.Group>\r\n                <Button type='submit' variant='primary'>Continue</Button>\r\n\r\n            </Form>\r\n\r\n        </FormContainer>\r\n    )\r\n\r\n}\r\nexport default PaymentScreen","import React,{useState,useEffect} from \"react\";\r\nimport {Button, Row, Col, ListGroup, Image, Card, ListGroupItem,} from \"react-bootstrap\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\nimport {createOrder} from \"../actions/OrderActions\";\r\nimport {ORDER_CREATE_RESET} from \"../constants/OrderConstants\";\r\n\r\nfunction PlaceOrderScreen({ history }) {\r\n\r\n    const orderCreate = useSelector(state => state.orderCreate)\r\n    const {order,error, success} = orderCreate\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    cart.itemsPrice= cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\r\n    cart.shippingPrice = (cart.itemsPrice < 100 ? 0 : 10).toFixed(2)\r\n    cart.taxPrice = Number((0.082) * cart.itemsPrice).toFixed(2)\r\n    cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice))\r\n        .toFixed(2)\r\n\r\n    if (!cart.paymentMethod){\r\n        history.push('/payment')\r\n    }\r\n\r\n\r\n    useEffect(() =>{\r\n        if (success){\r\n            history.push(`/order/${order._id}`)\r\n            dispatch({type:ORDER_CREATE_RESET})\r\n        }\r\n    },[success, history])\r\n\r\n    const placeOrder = () => {\r\n        dispatch(createOrder({\r\n            orderItems:cart.cartItems,\r\n            shippingAddress:cart.shippingAddress,\r\n            paymentMethod:cart.paymentMethod,\r\n            itemsPrice:cart.itemsPrice,\r\n            shippingPrice:cart.shippingPrice,\r\n            taxPrice:cart.taxPrice,\r\n            totalPrice:cart.totalPrice,\r\n        }))\r\n        // console.log(\"place oredr\")\r\n      \r\n    }\r\n    return(\r\n        <div>\r\n            <CheckoutSteps step1 step2 step3 step4/>\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n                            <p>\r\n                                <strong>Shipping:</strong>\r\n                                {cart.shippingAddress.address}, {cart.shippingAddress.city}\r\n                                {'  '}\r\n                                {cart.shippingAddress.postalCode}\r\n                                {'  '}\r\n                                {cart.shippingAddress.country}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <h2>Payment method</h2>\r\n                            <p>\r\n                                <strong>Method:</strong>\r\n                                {cart.paymentMethod}\r\n\r\n                            </p>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <h2>Order items</h2>\r\n                            {cart.cartItems.length === 0 ? <Message variant='info'>\r\n                                your cart is empty\r\n\r\n                            </Message>:(\r\n                                <ListGroup variant='flush'>\r\n                                    {cart.cartItems.map((item, index) =>(\r\n                                        <ListGroup.Item key={index}>\r\n                                            <Row>\r\n                                                <Col md={1}>\r\n                                                    <Image src={item.image} alt={item.name} fluid rounded/>\r\n                                                </Col>\r\n                                                <Col>\r\n                                                    <Link to={`/product/${item.product}`}>\r\n                                                        {item.name}\r\n                                                    </Link>\r\n                                                </Col>\r\n                                                <Col md={4}>\r\n                                                    {item.qty} x ${item.price} = ${(item.qty * item.price).toFixed(2)}\r\n\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                </ListGroup>\r\n                            )}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n\r\n                </Col>\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>order summary</h2>\r\n\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>\r\n                                        Item:\r\n                                    </Col>\r\n                                    <Col>ksh{cart.itemsPrice}</Col>\r\n                                </Row>\r\n\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>\r\n                                        Shipping:\r\n                                    </Col>\r\n                                    <Col>ksh{cart.shippingPrice}</Col>\r\n                                </Row>\r\n\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>\r\n                                        Tax:\r\n                                    </Col>\r\n                                    <Col>ksh{cart.taxPrice}</Col>\r\n                                </Row>\r\n\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>\r\n                                        Total:\r\n                                    </Col>\r\n                                    <Col>ksh{cart.totalPrice}</Col>\r\n                                </Row>\r\n\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                {error && <Message variant='danger'>{error}</Message>}\r\n\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Button\r\n                                    type='button'\r\n                                    className='btn-block'\r\n                                    disabled={cart.cartItems === 0}\r\n                                    onClick={placeOrder}\r\n                                >\r\n                                    place order\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n\r\n                </Col>\r\n            </Row>\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default PlaceOrderScreen","import React,{useState,useEffect} from \"react\";\r\nimport {Button, Row, Col, ListGroup, Image, Card, ListGroupItem,} from \"react-bootstrap\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {PayPalButton} from \"react-paypal-button-v2\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport {getOrderDetails, payOrder,deliverOrder} from \"../actions/OrderActions\";\r\nimport Loader from \"../components/Loader\";\r\nimport {ORDER_PAY_RESET, ORDER_DELIVER_RESET} from \"../constants/OrderConstants\";\r\n\r\nfunction OrderScreen({ match, history }) {\r\n    const orderId = match.params.id\r\n    const  dispatch = useDispatch()\r\n\r\n    const [sdkReady,setSdkReady] = useState(false)\r\n\r\n    const orderDetails = useSelector(state => state.orderDetails)\r\n    const {order,error, loading} = orderDetails\r\n\r\n\r\n    const orderPay = useSelector(state => state.orderPay)\r\n    const {loading:loadingPay, success:successPay} = orderPay\r\n\r\n    const orderDeliver = useSelector(state => state.orderDeliver)\r\n    const {loading:loadingDeliver, success:successDeliver} = orderDeliver\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const {userInfo} = userLogin\r\n\r\n\r\n    if (!loading && !error){\r\n        order.itemsPrice= order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n        .toFixed(2)\r\n    }\r\n    const addPayPalScript = () =>{\r\n        const script = document.createElement('script')\r\n        script.type = 'text/javascript'\r\n        script.src = 'https://www.paypal.com/sdk/js?client-id=AawE1sMgwzizLbP4s3lEo3t3wNGXRxN6VlC3rGSE6Eoe6zu2nBe2AOOS51iaCos6kqR8HJnOzvw5xOns'\r\n        script.async = true\r\n        script.onload = () =>{\r\n            setSdkReady(true)\r\n        }\r\n        document.body.appendChild(script)\r\n    }\r\n    useEffect(() =>{\r\n        if (!userInfo){\r\n            history.push('/login')\r\n        }\r\n\r\n        if (!order||successPay || order._id !== Number(orderId) || successDeliver){\r\n            dispatch({type:ORDER_PAY_RESET})\r\n            dispatch({type:ORDER_DELIVER_RESET})\r\n\r\n            dispatch(getOrderDetails(orderId))\r\n\r\n        }else if (!order.isPaid){\r\n            if (!window.paypal){\r\n                addPayPalScript()\r\n            }else {\r\n                setSdkReady(true)\r\n            }\r\n        }\r\n\r\n    },[dispatch,order,orderId, successPay,successDeliver])\r\n    \r\n    \r\n    const successPaymentHandler = (paymentResult) => {\r\n        dispatch(payOrder(orderId, paymentResult))\r\n      \r\n    }\r\n    const deliverHandler = () => {\r\n        dispatch(deliverOrder(order))\r\n      \r\n    }\r\n\r\n\r\n    return loading ?\r\n        (\r\n        <Loader/>\r\n        ):error ? (\r\n            <Message variant='danger'>{error}</Message>\r\n        ):\r\n    (\r\n        <div>\r\n            <h1>Order: {order._id}</h1>\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n                            <p>\r\n                                <strong>\r\n                                    Name:\r\n                                </strong>\r\n                                {order.user.name}\r\n                            </p>\r\n                            <p>\r\n                                <strong>Email:</strong>\r\n                                <a href={`mailed to${order.user.email}`}>{order.user.email}</a>\r\n                            </p>\r\n                            <p>\r\n                                <strong>Shipping:</strong>\r\n                                {order.shippingAddress.address}, {order.shippingAddress.city}\r\n                                {'  '}\r\n                                {order.shippingAddress.postalCode}\r\n                                {'  '}\r\n                                {order.shippingAddress.country}\r\n                            </p>\r\n                             {order.isDelivered ? (\r\n                                <Message variant='success'>Derivered on {order.paidAt}</Message>\r\n                            ):(\r\n                                <Message variant='danger'>Not Derivered {order.paidAt}</Message>\r\n\r\n                            )}\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <h2>Payment method</h2>\r\n                            <p>\r\n                                <strong>Method:</strong>\r\n                                {order.paymentMethod}\r\n\r\n                            </p>\r\n                            {order.isPaid ? (\r\n                                <Message variant='success'>Paid on {order.paidAt}</Message>\r\n                            ):(\r\n                                <Message variant='danger'>Not paid {order.paidAt}</Message>\r\n\r\n                            )}\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <h2>Order items</h2>\r\n                            {order.orderItems.length === 0 ? <Message variant='info'>\r\n                                your order is empty\r\n\r\n                            </Message>:(\r\n                                <ListGroup variant='flush'>\r\n                                    {order.orderItems.map((item, index) =>(\r\n                                        <ListGroup.Item key={index}>\r\n                                            <Row>\r\n                                                <Col md={1}>\r\n                                                    <Image src={item.image} alt={item.name} fluid rounded/>\r\n                                                </Col>\r\n                                                <Col>\r\n                                                    <Link to={`/product/${item.product}`}>\r\n                                                        {item.name}\r\n                                                    </Link>\r\n                                                </Col>\r\n                                                <Col md={4}>\r\n                                                    {item.qty} x ${item.price} = ${(item.qty * item.price)\r\n                                                    .toFixed(2)}\r\n\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                </ListGroup>\r\n                            )}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n\r\n                </Col>\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>order summary</h2>\r\n\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>\r\n                                        Item:\r\n                                    </Col>\r\n                                    <Col>ksh{order.itemsPrice}</Col>\r\n                                </Row>\r\n\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>\r\n                                        Shipping:\r\n                                    </Col>\r\n                                    <Col>ksh{order.shippingPrice}</Col>\r\n                                </Row>\r\n\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>\r\n                                        Tax:\r\n                                    </Col>\r\n                                    <Col>ksh{order.taxPrice}</Col>\r\n                                </Row>\r\n\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>\r\n                                        Total:\r\n                                    </Col>\r\n                                    <Col>ksh{order.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            {!order.isPaid && (\r\n                                  <ListGroup.Item>\r\n                                      {loadingPay && <Loader/>}\r\n                                      {!sdkReady ? (\r\n                                          <Loader/>\r\n                                      ) : (\r\n                                          <PayPalButton\r\n                                                amount={order.totalPrice}\r\n                                                onSuccess={successPaymentHandler}\r\n                                          />\r\n\r\n                                      )}\r\n\r\n                                  </ListGroup.Item>\r\n\r\n                                )}\r\n\r\n\r\n                        </ListGroup>\r\n                        {loadingDeliver && <Loader/>}\r\n                        {userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\r\n                            <ListGroup.Item>\r\n                                <Button\r\n                                    type='button'\r\n                                    className='btn btn-block'\r\n                                    onClick={deliverHandler}\r\n                                >\r\n                                    Mark as delivered\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n                        )}\r\n                    </Card>\r\n\r\n                </Col>\r\n            </Row>\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default OrderScreen","import React,{useState,useEffect} from \"react\";\r\nimport {LinkContainer} from \"react-router-bootstrap\";\r\nimport {Form, Button, Row, Col, FormGroup, Table} from \"react-bootstrap\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport {listUsers, deleteUser} from \"../actions/UserActions\";\r\n\r\nfunction UserListSCreen({history}) {\r\n    const  dispatch = useDispatch()\r\n    const  userList = useSelector(state => state.userList)\r\n    const {loading, users, error} = userList\r\n    const  userLogin = useSelector(state => state.userLogin)\r\n    const {userInfo} = userLogin\r\n    const  userDelete = useSelector(state => state.userDelete )\r\n    const { success: successDelete } = userDelete\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin){\r\n            dispatch(listUsers())\r\n\r\n        }else{\r\n            history.push('/login')\r\n        }\r\n\r\n    },[dispatch, history, successDelete, userInfo])\r\n\r\n    \r\n    const deleteHandler = (id) => {\r\n        if (window.confirm(\"Are you ready to delete the user?\")){\r\n            dispatch(deleteUser(id))\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <h1>users</h1>\r\n            {loading ? (\r\n                <Loader/>\r\n                )\r\n            : error ?(\r\n                            <Message variant='danger'>{error}</Message>\r\n                ):\r\n                    (\r\n                        <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>Name</th>\r\n                                    <th>Email</th>\r\n                                    <th>Admin</th>\r\n                                    <th></th>\r\n                                </tr>\r\n\r\n                            </thead>\r\n                            <tbody>\r\n                                {users.map(user => (\r\n                                    <tr key={user._id}>\r\n                                        <td>{user._id}</td>\r\n                                        <td>{user.name}</td>\r\n                                        <td>{user.email}</td>\r\n                                        <td>{user.isAdmin ? (\r\n                                            <i className='fas fa-check' style={{color:'green'}}/>\r\n                                        ):(\r\n                                            <i className='fas fa-check' style={{color:'red'}}/>\r\n\r\n                                            )\r\n                                            }</td>\r\n                                        <td>\r\n                                            <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                                                <Button variant='light' className='btn-sm'>\r\n                                                    <i className='fas fa-edit' />\r\n\r\n                                                </Button>\r\n\r\n                                            </LinkContainer>\r\n                                            <Button variant='danger' className='btn-sm' onClick={() =>\r\n                                                deleteHandler(user._id)}>\r\n                                                    <i className='fas fa-trash' />\r\n                                                </Button>\r\n                                        </td>\r\n\r\n\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n\r\n                    )\r\n            }\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default UserListSCreen","import React,{useState,useEffect} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {Form, Button,  FormGroup} from \"react-bootstrap\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport {getUserDetails, updateUser} from \"../actions/UserActions\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport {userUpdateReducer} from \"../reducers/userReducers\";\r\nimport {USER_UPDATES_RESET} from \"../constants/userConstants\";\r\n\r\n\r\nfunction EditUserScreen({match, history}) {\r\n\r\n    const userId = match.params.id\r\n\r\n    const  [name, setName] = useState('')\r\n    const  [email, setEmail] = useState('')\r\n    const  [isAdmin, setIsAdmin] = useState('false')\r\n\r\n\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const {error, loading, user} = userDetails\r\n\r\n    const userUpdate = useSelector(state => state.userUpdate)\r\n    const {error:errorUpdate, loading:loadingUpdate, success:successUpdate} = userUpdate\r\n\r\n    useEffect(() => {\r\n        if (successUpdate){\r\n            dispatch({type: USER_UPDATES_RESET})\r\n            history.push('/admin/userlist')\r\n        }else{\r\n            if (!user.name || user._id !== Number(userId)){\r\n                dispatch(getUserDetails(userId))\r\n            }else{\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n                setIsAdmin(user.isAdmin)\r\n\r\n            }\r\n        }\r\n\r\n\r\n    },[user,userId, successUpdate,history])//dependencies\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateUser({_id: user._id,name, email,isAdmin}))\r\n\r\n    }\r\n    return(\r\n        <div>\r\n            <Link to={`/admin/userlist`}>\r\n                Go back\r\n            </Link>\r\n            <FormContainer>\r\n            <h1>Edit User</h1>\r\n                {loadingUpdate && <Loader/>}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message> }\r\n                {loading ? <Loader/> : error ? <Message variant='danger'>{error}</Message>\r\n                    :\r\n                    (\r\n                        <Form onSubmit={submitHandler}>\r\n\r\n                         <FormGroup controlId={name}>\r\n                            <Form.Label>name</Form.Label>\r\n                            <Form.Control\r\n                            type='name'\r\n                            placeholder='enter name'\r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}\r\n                            >\r\n\r\n                            </Form.Control>\r\n\r\n                        </FormGroup>\r\n                         <FormGroup controlId={email}>\r\n                            <Form.Label>Email Adress</Form.Label>\r\n                            <Form.Control\r\n                            type='email'\r\n                            placeholder='enter email'\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                            >\r\n\r\n                            </Form.Control>\r\n\r\n                        </FormGroup>\r\n                         <FormGroup controlId={isAdmin}>\r\n                            <Form.Check\r\n                            type='checkbox'\r\n                            lable=\"Is admin\"\r\n                            checked={isAdmin}\r\n                            onChange={(e) => setIsAdmin(e.target.checked)}\r\n                            >\r\n\r\n                            </Form.Check>\r\n                        </FormGroup>\r\n\r\n\r\n                        <Button type='submit' variant='primary'>Update</Button>\r\n\r\n                        </Form>\r\n                    )}\r\n\r\n\r\n\r\n\r\n        </FormContainer>\r\n\r\n        </div>\r\n\r\n)}\r\nexport default EditUserScreen","import React,{useState,useEffect} from \"react\";\r\nimport {LinkContainer} from \"react-router-bootstrap\";\r\nimport {Form, Button, Row, Col, FormGroup, Table} from \"react-bootstrap\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport Paginate from \"../components/Paginate\";\r\nimport {listProducts, deleteProduct, createProduct} from \"../actions/productActions\";\r\nimport products from \"../products\";\r\nimport {PRODUCT_CREATE_RESET} from \"../constants/productConstants\";\r\n\r\nfunction ProductListScreen({history, match }) {\r\n    const  dispatch = useDispatch()\r\n    const  productList = useSelector(state => state.productList)\r\n    const {loading, products, error,page, pages} = productList\r\n\r\n    const  productDelete = useSelector(state => state.productDelete)\r\n    const {loading:loadingDelete, success:successDelete, error:errorDelete} = productDelete\r\n\r\n    const  productCreate = useSelector(state => state.productCreate)\r\n    const {loading:loadingCreate, success:successCreate, error:errorCreate, product:createdProduct} = productCreate\r\n\r\n    const  userLogin = useSelector(state => state.userLogin)\r\n    const {userInfo} = userLogin\r\n\r\n    let keyword = history.location.search\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch({type:PRODUCT_CREATE_RESET})\r\n        if (!userInfo.isAdmin){\r\n            history.push('/login')\r\n        }\r\n        if (successCreate){\r\n            history.push(`/admin/product/${createdProduct._id}/edit`)\r\n\r\n        }else{\r\n            dispatch(listProducts(keyword))\r\n        }\r\n\r\n    },[dispatch, history, userInfo,successDelete, successCreate, createdProduct,keyword])\r\n\r\n\r\n    const deleteHandler = (id) => {\r\n        if (window.confirm(\"Are you ready to delete the user?\")){\r\n            dispatch(deleteProduct(id))\r\n                //delete products\r\n        }\r\n\r\n    }\r\n    const createProductHandler = () => {\r\n        dispatch(createProduct())\r\n        //create product\r\n      \r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <Row className='align-items-center'>\r\n                <Col>\r\n                    <h1>products</h1>\r\n                </Col>\r\n                <Col className='text-right'>\r\n                    <Button className='my-3' onClick={createProductHandler}>\r\n                        <i className='fas fa-plus'/> Create product</Button>\r\n                </Col>\r\n            </Row>\r\n            {loadingDelete && <Loader/>}\r\n            {errorDelete && <Message variant='danger'>{errorDelete}</Message> }\r\n\r\n            {loadingCreate && <Loader/>}\r\n            {errorCreate && <Message variant='danger'>{errorCreate}</Message> }\r\n\r\n            {loading ? (\r\n                <Loader/>\r\n                )\r\n            : error ?(\r\n                            <Message variant='danger'>{error}</Message>\r\n                ):\r\n                    (\r\n                        <div>\r\n                        <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>Name</th>\r\n                                    <th>Price</th>\r\n                                    <th>Category</th>\r\n                                    <th>Brand</th>\r\n                                    <th></th>\r\n                                </tr>\r\n\r\n                            </thead>\r\n                            <tbody>\r\n                                {products.map(product => (\r\n                                    <tr key={product._id}>\r\n                                        <td>{product._id}</td>\r\n                                        <td>{product.name}</td>\r\n                                        <td>{product.price}</td>\r\n                                        <td>{product.category}</td>\r\n                                        <td>{product.brand}</td>\r\n\r\n\r\n                                        <td>\r\n                                            <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                                                <Button variant='light' className='btn-sm'>\r\n                                                    <i className='fas fa-edit' />\r\n\r\n                                                </Button>\r\n\r\n                                            </LinkContainer>\r\n                                            <Button variant='danger' className='btn-sm' onClick={() =>\r\n                                                deleteHandler(product._id)}>\r\n                                                    <i className='fas fa-trash' />\r\n                                                </Button>\r\n                                        </td>\r\n\r\n\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                            <Paginate pages={pages} page={page} isAdmin={true}/>\r\n                        </div>\r\n\r\n                    )\r\n            }\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default ProductListScreen","import React,{useState,useEffect} from \"react\";\r\nimport axios from \"axios\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {Form, Button,  FormGroup} from \"react-bootstrap\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport {listProductDetails, updateProduct} from \"../actions/productActions\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport {PRODUCT_UPDATE_RESET} from \"../constants/productConstants\";\r\n\r\n\r\nfunction ProductEditScreen({match, history}) {\r\n\r\n    const productId = match.params.id\r\n\r\n    const  [name, setName] = useState('')\r\n    const  [price, setPrice] = useState('0')\r\n    const  [image, setImage] = useState('')\r\n    const  [brand, setBrand] = useState('')\r\n    const  [category, setCategory] = useState('')\r\n    const  [countInStock, setCountInStock] = useState('0')\r\n    const  [description, setDescription] = useState('')\r\n    const  [uploading, setUploading] = useState(false)\r\n\r\n\r\n\r\n\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const {error, loading, product} = productDetails\r\n    const productUpdate = useSelector(state => state.productUpdate)\r\n    const {error:errorUpdate, loading:loadingUpdate, success:successUpdate} = productUpdate\r\n\r\n\r\n    useEffect(() => {\r\n        if (successUpdate){\r\n            dispatch({type:PRODUCT_UPDATE_RESET})\r\n            history.push('/admin/productlist')\r\n        }else{\r\n            if (!product.name || product._id !== Number(productId)){\r\n                dispatch(listProductDetails(productId))\r\n            }else{\r\n                setName(product.name)\r\n                setPrice(product.price)\r\n                setImage(product.image)\r\n                setBrand(product.brand)\r\n                setCategory(product.category)\r\n                setCountInStock(product.countInStock)\r\n                setDescription(product.description)\r\n\r\n\r\n            }\r\n        }\r\n    },[dispatch, product,productId, history,successUpdate])//dependencies\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateProduct({\r\n            _id:productId,\r\n            name,\r\n            price,\r\n            image,\r\n            brand,\r\n            category,\r\n            countInStock,\r\n            description,\r\n        }))\r\n        //update products\r\n    }\r\n    const uploadFileHandler = async (e) => {\r\n        const file = e.target.files[0]\r\n        const formData = new FormData()\r\n\r\n        formData.append('image', file)\r\n        formData.append('product_id', productId)\r\n\r\n        setUploading(true)\r\n\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            }\r\n\r\n            const { data } = await axios.post('/api/products/upload/', formData, config)\r\n\r\n\r\n            setImage(data)\r\n            setUploading(false)\r\n\r\n        } catch (error) {\r\n            setUploading(false)\r\n        }\r\n    }\r\n    return(\r\n        <div>\r\n            <Link to={`/admin/productlist`}>\r\n                Go back\r\n            </Link>\r\n            <FormContainer>\r\n            <h1>Edit Product</h1>\r\n                {loadingUpdate && <Loader/>}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n                {loading ? <Loader/> : error ? <Message variant='danger'>{error}</Message>\r\n                    :\r\n                    (\r\n                        <Form onSubmit={submitHandler}>\r\n\r\n                         <FormGroup controlId={name}>\r\n                            <Form.Label>name</Form.Label>\r\n                            <Form.Control\r\n                            type='name'\r\n                            placeholder='enter name'\r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}\r\n                            >\r\n\r\n                            </Form.Control>\r\n\r\n                        </FormGroup>\r\n                         <FormGroup controlId={price}>\r\n                            <Form.Label>price</Form.Label>\r\n                            <Form.Control\r\n                            type='number'\r\n                            placeholder='enter price'\r\n                            value={price}\r\n                            onChange={(e) => setPrice(e.target.value)}\r\n                            >\r\n\r\n                            </Form.Control>\r\n\r\n                        </FormGroup>\r\n                        <Form.Group controlId='image'>\r\n                                <Form.Label>Image</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter image'\r\n                                    value={image}\r\n                                    onChange={(e) => setImage(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n\r\n                                <Form.File\r\n                                    id='image-file'\r\n                                    label='Choose File'\r\n                                    custom\r\n                                    onChange={uploadFileHandler}\r\n                                >\r\n\r\n                                </Form.File>\r\n                                {uploading && <Loader />}\r\n\r\n                            </Form.Group>\r\n\r\n                        <FormGroup controlId={brand}>\r\n                            <Form.Label>brand</Form.Label>\r\n                            <Form.Control\r\n                            type='text'\r\n                            placeholder='enter brand'\r\n                            value={brand}\r\n                            onChange={(e) => setBrand(e.target.value)}\r\n                            >\r\n\r\n                            </Form.Control>\r\n\r\n                        </FormGroup>\r\n                        <FormGroup controlId={countInStock}>\r\n                            <Form.Label>countInStock</Form.Label>\r\n                            <Form.Control\r\n                            type='number'\r\n                            placeholder='enter Stock'\r\n                            value={countInStock}\r\n                            onChange={(e) => setCountInStock(e.target.value)}\r\n                            >\r\n\r\n                            </Form.Control>\r\n\r\n                        </FormGroup>\r\n                        <FormGroup controlId={category}>\r\n                            <Form.Label>category</Form.Label>\r\n                            <Form.Control\r\n                            type='text'\r\n                            placeholder='enter category'\r\n                            value={category}\r\n                            onChange={(e) => setCategory(e.target.value)}\r\n                            >\r\n\r\n                            </Form.Control>\r\n\r\n                        </FormGroup>\r\n                        <FormGroup controlId={description}>\r\n                            <Form.Label>description</Form.Label>\r\n                            <Form.Control\r\n                            type='text'\r\n                            placeholder='enter description'\r\n                            value={description}\r\n                            onChange={(e) => setDescription(e.target.value)}\r\n                            >\r\n\r\n                            </Form.Control>\r\n\r\n                        </FormGroup>\r\n\r\n\r\n\r\n\r\n                        <Button type='submit' variant='primary'>Update</Button>\r\n\r\n                        </Form>\r\n                    )}\r\n\r\n\r\n\r\n\r\n        </FormContainer>\r\n\r\n        </div>\r\n\r\n)}\r\nexport default ProductEditScreen","import React,{useState,useEffect} from \"react\";\r\nimport {LinkContainer} from \"react-router-bootstrap\";\r\nimport {Form, Button, Row, Col, FormGroup, Table} from \"react-bootstrap\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport {listOrders} from \"../actions/OrderActions\";\r\n\r\nfunction OrderListSCreen({history}) {\r\n    const  dispatch = useDispatch()\r\n\r\n    const  orderList = useSelector(state => state.orderList)\r\n    const {loading, orders, error} = orderList\r\n\r\n    const  userLogin = useSelector(state => state.userLogin)\r\n    const {userInfo} = userLogin\r\n\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin){\r\n            dispatch(listOrders())\r\n\r\n        }else{\r\n            history.push('/login')\r\n        }\r\n\r\n    },[dispatch, history, userInfo])\r\n\r\n\r\n\r\n\r\n    return(\r\n        <div>\r\n            <h1>orders</h1>\r\n            {loading ? (\r\n                <Loader/>\r\n                )\r\n            : error ?(\r\n                            <Message variant='danger'>{error}</Message>\r\n                ):\r\n                    (\r\n                        <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>USER</th>\r\n                                    <th>DATE</th>\r\n                                    <th>TOTAL</th>\r\n                                    <th>PAID</th>\r\n                                    <th>DELIVERED </th>\r\n                                    <th></th>\r\n                                </tr>\r\n\r\n                            </thead>\r\n                            <tbody>\r\n                                {orders.map(order => (\r\n                                    <tr key={order._id}>\r\n                                        <td>{order._id}</td>\r\n                                        <td>{order.user && order.user.name}</td>\r\n                                        <td>{order.createdAt}</td>\r\n                                        <td>ksh {order.totalPrice}</td>\r\n                                        <td>{order.isPaid ? (\r\n                                            order.paidAt\r\n                                        ):(\r\n                                            <i className='fas fa-check' style={{color:'red'}}/>\r\n                                            )\r\n                                            }\r\n                                        </td>\r\n                                        <td>{order.isDelivered ? (\r\n                                            order.deliveredAt\r\n                                        ):(\r\n                                            <i className='fas fa-check' style={{color:'red'}}/>\r\n                                            )\r\n                                            }\r\n                                        </td>\r\n                                        <td>\r\n                                            <LinkContainer to={`/order/${order._id}`}>\r\n                                                <Button variant='light' className='btn-sm'>\r\n                                                    details\r\n                                                </Button>\r\n\r\n                                            </LinkContainer>\r\n\r\n                                        </td>\r\n\r\n\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n\r\n                    )\r\n            }\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default OrderListSCreen","import './App.css';\nimport {Container} from \"react-bootstrap\";\nimport Header from \"./components/Header\";\nimport {HashRouter as Router, Route} from \"react-router-dom\";\nimport Footer from \"./components/Footer\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport ProductScreen from \"./screens/ProductScreen\";\nimport CartScreen from \"./screens/CartScreen\";\nimport LoginScreen from \"./screens/LoginScreen\";\nimport RegisterScreen from \"./screens/RegisterScreen\";\nimport ProfileScreen from \"./screens/ProfileScreen\";\nimport ShippingScreen from \"./screens/ShippingScreen\";\nimport PaymentScreen from \"./screens/PaymentScreen\";\nimport PlaceOrderScreen from \"./screens/PlaceOrderScreen\";\nimport OrderScreen from \"./screens/OrderScreen\";\nimport UserListSCreen from \"./screens/UserListSCreen\";\nimport UserEditScreen from \"./screens/UserEditScreen\";\nimport ProductListScreen from \"./screens/ProductListScreen\";\nimport ProductEditScreen from \"./screens/ProductEditScreen\";\nimport OrderListSCreen from \"./screens/OrderListScreen\";\n\nfunction App() {\n  return (\n    <Router >\n        <Header/>\n      <main className='py-3'>\n          <Container>\n              <Route path='/' component={HomeScreen} exact/>\n              <Route path='/login' component={LoginScreen} />\n              <Route path='/register' component={RegisterScreen} />\n              <Route path='/profile' component={ProfileScreen} />\n\n              <Route path='/shipping' component={ShippingScreen} />\n              <Route path='/payment' component={PaymentScreen} />\n              <Route path='/placeOrder' component={PlaceOrderScreen} />\n              <Route path='/order/:id' component={OrderScreen}/>\n\n              <Route path='/product/:id/' component={ProductScreen} />\n              <Route path='/cart/:id?' component={CartScreen} />\n              <Route path='/admin/userlist' component={UserListSCreen} />\n              <Route path='/admin/user/:id/edit' component={UserEditScreen} />\n              <Route path='/admin/productlist' component={ProductListScreen} />\n              <Route path='/admin/product/:id/edit' component={ProductEditScreen} />\n              <Route path='/admin/orderlist' component={OrderListSCreen} />\n\n\n\n\n\n\n\n\n\n              {/*<HomeScreen/>*/}\n          </Container>\n      </main>\n        <Footer/>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from \"react-redux\";\nimport store from \"./Store\";\nimport './index.css';\nimport './bootstrap.min.css'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}